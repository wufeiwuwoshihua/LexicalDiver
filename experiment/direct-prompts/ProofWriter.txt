Task Description: You are given a problem description and a question. The task is to: 
1) define all the predicates in the problem
2) parse the problem into logic rules based on the defined predicates
3) write all the facts mentioned in the problem
4) parse the question into the logic form
Please provide a program directly in the example format, other textual expressions like "The logic program for each problem is presented below:" should not be included in your answer.
Please pay special attention: for a property like "sour", both "sour" and "not sour" may appear. When reading the context and the question, ensure that you note any presence of "not". They should be translated as Sour($x, True) and Sour($x, False) respectively, and should not be translated as !Sour or Not Sour.
------
Problem:
Anne is quiet. Erin is furry. Erin is green. Fiona is furry. Fiona is quiet. Fiona is red. Fiona is rough. Fiona is white. Harry is furry. Harry is quiet. Harry is white. Young people are furry. If Anne is quiet then Anne is red. Young, green people are rough. If someone is green then they are white. If someone is furry and quiet then they are white. If someone is young and white then they are rough. All red people are young.
Question:
Based on the above information, is the following statement true, false, or unknown? Anne is white.
###
Predicates:
Quiet($x, bool) ::: Is x quiet?
Furry($x, bool) ::: Is x furry?
Green($x, bool) ::: Is x green?
Red($x, bool) ::: Is x red?
Rough($x, bool) ::: Is x rough?
White($x, bool) ::: Is x white?
Young($x, bool) ::: Is x young?
Facts:
Quite(Anne, True) ::: Anne is quiet.
Furry(Erin, True) ::: Erin is furry.
Green(Erin, True) ::: Erin is green.
Furry(Fiona, True) ::: Fiona is furry.
Quite(Fiona, True) ::: Fiona is quiet.
Red(Fiona, True) ::: Fiona is red.
Rough(Fiona, True) ::: Fiona is rough.
White(Fiona, True) ::: Fiona is white.
Furry(Harry, True) ::: Harry is furry.
Quite(Harry, True) ::: Harry is quiet.
White(Harry, True) ::: Harry is white.
Rules:
Young($x, True) >>> Furry($x, True) ::: Young people are furry.
Quite(Anne, True) >>> Red($x, True) ::: If Anne is quiet then Anne is red.
Young($x, True) >>> Rough($x, True) ::: Young, green people are rough.
Green($x, True) >>> Rough($x, True) ::: Young, green people are rough.
Green($x, True) >>> White($x, True) ::: If someone is green then they are white.
Furry($x, True) && Quite($x, True) >>> White($x, True) ::: If someone is furry and quiet then they are white.
Young($x, True) && White($x, True) >>> Rough($x, True) ::: If someone is young and white then they are rough.
Red($x, True) >>> Young($x, True) ::: All red people are young.
Query:
White(Anne, True) ::: Anne is white.
------
Problem:
The bear is round. The bear likes the cow. The bear visits the lion. The cow is big. The cow is rough. The lion needs the bear. The mouse likes the lion. If someone visits the lion then they are round. If someone needs the bear then they need the lion. If someone needs the lion then they visit the lion. If someone visits the lion and the lion is round then they like the lion. If someone is rough then they need the lion. If someone likes the lion and they need the lion then the lion visits the mouse. If someone is rough then they visit the lion. If someone likes the lion and the lion is big then they are kind.
Question:
Based on the above information, is the following statement true, false, or unknown? The mouse needs the lion.
###
Predicates:
Round($x, bool) ::: Is $x round?
Likes($x, $y, bool) ::: Does $x like $y?
Visits($x, $y, bool) ::: Does $x visit $y?
Big($x, bool) ::: Is $x big?
Rough($x, bool) ::: Is $x rough?
Needs($x, $y, bool) ::: Does $x need $y?
Kind($x, bool) ::: Is $x kind?
Facts:
Round(Bear, True)
Likes(Bear, Cow, True)
Visits(Bear, Lion, True)
Big(Cow, True)
Rough(Cow, True)
Needs(Lion, Bear, True)
Likes(Mouse, Lion, True)
Rules:
Visits($x, Lion, True) >>> Round($x, True)
Needs($x, Bear, True) >>> Needs($x, Lion, True)
Needs($x, Lion, True) >>> Visits($x, Lion, True)
Visits($x, Lion, True) ∧ Round(Lion, True) >>> Likes($x, Lion, True)
Rough($x, True) >>> Needs($x, Lion, True)
Rough($x, True) >>> Visits($x, Lion, True)
Likes($x, Lion, True) ∧ Needs($x, Lion, True) >>> Visits(Lion, Mouse, True)
Likes($x, Lion, True) ∧ Big(Lion, True) >>> Kind($x, True)
Query:
Needs(Mouse, Lion, True)
------
Problem:
[[PROBLEM]]
Question:
[[QUESTION]]
###