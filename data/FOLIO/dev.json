[
    {
        "context": "If people perform in school talent shows often, then they attend and are very engaged with school events.\nPeople either perform in school talent shows often or are inactive and disinterested members of their community.\nIf people chaperone high school dances, then they are not students who attend the school.\nAll people who are inactive and disinterested members of their community chaperone high school dances.\nAll young children and teenagers who wish to further their academic careers and educational opportunities are students who attend the school.\nBonnie either both attends and is very engaged with school events and is a student who attends the school, or she neither attends and is very engaged with school events nor is a student who attends the school. ",
        "premises-FOL": "∀x (TalentShows(x) → Engaged(x))\n∀x (TalentShows(x) ∨ Inactive(x))\n∀x (Chaperone(x) → ¬Students(x))\n∀x (Inactive(x) → Chaperone(x))\n∀x (AcademicCareer(x) → Students(x))\n(Engaged(bonnie) ∧ Students(bonnie)) ⊕ (¬Engaged(bonnie) ∧ ¬Students(bonnie))",
        "question": "Is the following statement true or false? If Bonnie is either both a young child or teenager who wishes to further her academic career and educational opportunities and chaperones high school dances or neither is a young child nor teenager who wishes to further her academic career and educational opportunities, then Bonnie is either a student who attends the school or is an inactive and disinterested member of the community.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "AcademicCareer(bonnie) ⊕ Chaperone(bonnie) → AcademicCareer(bonnie) ⊕ Inactive(bonnie)",
        "answer": "A",
        "id": "FOLIO_1"
    },
    {
        "context": "If people perform in school talent shows often, then they attend and are very engaged with school events.\nPeople either perform in school talent shows often or are inactive and disinterested members of their community.\nIf people chaperone high school dances, then they are not students who attend the school.\nAll people who are inactive and disinterested members of their community chaperone high school dances.\nAll young children and teenagers who wish to further their academic careers and educational opportunities are students who attend the school.\nBonnie either both attends and is very engaged with school events and is a student who attends the school, or she neither attends and is very engaged with school events nor is a student who attends the school. ",
        "premises-FOL": "∀x (TalentShows(x) → Engaged(x))\n∀x (TalentShows(x) ∨ Inactive(x))\n∀x (Chaperone(x) → ¬Students(x))\n∀x (Inactive(x) → Chaperone(x))\n∀x (AcademicCareer(x) → Students(x))\n(Engaged(bonnie) ∧ Students(bonnie)) ⊕ (¬Engaged(bonnie) ∧ ¬Students(bonnie))",
        "question": "Is the following statement true or false? If Bonnie either chaperones high school dances or, if she does not, she performs in school talent shows often, then Bonnie is both a young child or teenager who wishes to further her academic career and educational opportunities and an inactive and disinterested member of the community.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "Chaperone(bonnie) ⊕ TalentShows(bonnie) → AcademicCareer(bonnie) ∧ Inactive(bonnie))",
        "answer": "B",
        "id": "FOLIO_2"
    },
    {
        "context": "All employees who schedule a meeting with their customers will appear in the company today. \nEveryone who has lunch in the company schedules meetings with their customers. \nEmployees will either have lunch in the company or have lunch at home.\nIf an employee has lunch at home, then he/she is working remotely from home.\nAll employees who are in other countries work remotely from home. \nNo managers work remotely from home. \nJames is either a manager and appears in the company today or neither a manager nor appears in the company today.",
        "premises-FOL": "∀x (Meeting(x) → AppearInCompany(x))\n∀x (LunchInCompany(x) → Meetings(x))\n∀x (LunchInCompany(x) ∨ LunchAtHome(x))\n∀x (LunchAtHome(x) → WorkRemotelyFromHome(x))\n∀x (InOtherCountries(x) → WorkRemotelyFromHome(x))\n∀x (Manager(x) → ¬WorkRemotelyFromHome(x))\nManager(james) ⊕ AppearInCompany(james)",
        "question": "Is the following statement true or false? If James is either a manager or in other countries,  then James either has lunch at home and works remotely from home, or neither has lunch at home nor works remotely from home.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "(Manager(james) ⊕ InOtherCountries(james)) → (LunchAtHome(james) ⊕ WorkRemotelyFromHome(james))",
        "answer": "A",
        "id": "FOLIO_5"
    },
    {
        "context": "Monkeypox is an infectious disease caused by the monkeypox virus.\nMonkeypox virus can occur in certain animals, including humans.\nHumans are mammals.\nMammals are animals.\nSymptons of Monkeypox include fever, headache, muscle pains, feeling tired, and so on.\nPeople feel tired when they get a glu.",
        "premises-FOL": "∃x (OccurMonkeypoxVirus(x) ∧ GetMonkeypox(x))\n∃x (Animal(x) ∧ OccurMonkeypoxVirus(x))\n∀x (Human(x) → Mammal(x))\n∀x (Mammal(x) → Animal(x))\n∃x (GetMonkeypox(x) ∧ (Fever(x) ∨ Headache(x) ∨ MusclePain(x) ∨ Tired(x)))\n∀x (Human(x) ∧ Flu(x) → Tired(x))",
        "question": "Is the following statement true or false? There is an animal.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "∃x (Animal(x))",
        "answer": "A",
        "id": "FOLIO_6"
    },
    {
        "context": "There are six types of wild turkeys: Eastern wild turkey, Osceola wild turkey, Gould’s wild turkey, Merriam’s wild\nturkey, Rio Grande wild turkey, and Ocellated wild turkey.\nTom is not an Eastern wild turkey.\nTom is not an Osceola wild turkey.\nTom is also not a Gould's wild turkey, or a Merriam's wild turkey, or a Rio Grande wild turkey.\nTom is a wild turkey.",
        "premises-FOL": "∀x (WildTurkey(x) → (Eastern(x) ∨ Osceola(x) ∨ Goulds(x) ∨ Merriams(x) ∨ Riogrande(x) ∨ Ocellated(x)))\n¬(WildTurkey(tom) ∧ Eastern(tom))\n¬(WildTurkey(tom) ∧ Osceola(tom))\nWildTurkey(tom) → ¬(Goulds(tom) ∨ Merriams(tom) ∨ Riogrande(tom))\nWildTurkey(tom)",
        "question": "Is the following statement true or false? Tom is an Ocellated wild turkey.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "Ocellated(tom)",
        "answer": "A",
        "id": "FOLIO_9"
    },
    {
        "context": "There are six types of wild turkeys: Eastern wild turkey, Osceola wild turkey, Gould’s wild turkey, Merriam’s wild\nturkey, Rio Grande wild turkey, and Ocellated wild turkey.\nTom is not an Eastern wild turkey.\nTom is not an Osceola wild turkey.\nTom is also not a Gould's wild turkey, or a Merriam's wild turkey, or a Rio Grande wild turkey.\nTom is a wild turkey.",
        "premises-FOL": "∀x (WildTurkey(x) → (Eastern(x) ∨ Osceola(x) ∨ Goulds(x) ∨ Merriams(x) ∨ Riogrande(x) ∨ Ocellated(x)))\n¬(WildTurkey(tom) ∧ Eastern(tom))\n¬(WildTurkey(tom) ∧ Osceola(tom))\nWildTurkey(tom) → ¬(Goulds(tom) ∨ Merriams(tom) ∨ Riogrande(tom))\nWildTurkey(tom)",
        "question": "Is the following statement true or false? Tom is an Eastern wild turkey.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "Eastern(tom)",
        "answer": "B",
        "id": "FOLIO_10"
    },
    {
        "context": "A Japanese game company created the game the Legend of Zelda.\nAll games in the Top 10 list are made by Japanese game companies.\n[BG] If a game sells more than one million copies, then it will be selected into the Top 10 list.\nThe Legend of Zelda sold more than one million copies.",
        "premises-FOL": "∃x (Japanese(x) ∧ VideoGameCompany(x) ∧ Game(thelegendofzelda) ∧ Created(x, thelegendofzelda))\n∀x ∀y (Game(x) ∧ InTop10(x) ∧ Created(x, y) → Japanese(y))\n∀x (Game(x) ∧ SellsMoreThan(x, onemillioncopies) → Top10(x))\nSellsMoreThan(thelegendofzelda, onemillioncopies)",
        "question": "Is the following statement true or false? The Legend of Zelda is in the Top 10 list.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "Top10(thelegendofzelda)",
        "answer": "A",
        "id": "FOLIO_12"
    },
    {
        "context": "A Japanese game company created the game the Legend of Zelda.\nAll games in the Top 10 list are made by Japanese game companies.\n[BG] If a game sells more than one million copies, then it will be selected into the Top 10 list.\nThe Legend of Zelda sold more than one million copies.",
        "premises-FOL": "∃x (Japanese(x) ∧ VideoGameCompany(x) ∧ Game(thelegendofzelda) ∧ Created(x, thelegendofzelda))\n∀x ∀y (Game(x) ∧ InTop10(x) ∧ Created(x, y) → Japanese(y))\n∀x (Game(x) ∧ SellsMoreThan(x, onemillioncopies) → Top10(x))\nSellsMoreThan(thelegendofzelda, onemillioncopies)",
        "question": "Is the following statement true or false? The Legend of Zelda is not in the Top 10 list.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "¬Top10(thelegendofzelda)",
        "answer": "B",
        "id": "FOLIO_14"
    },
    {
        "context": "All squares have four sides.\nAll four-sided things are shapes. ",
        "premises-FOL": "∀x (Square(x) → FourSides(x))\n∀x (FourSides(x) → IsShape(x))",
        "question": "Is the following statement true or false? All squares are shapes.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "∀x (Square(x) → IsShape(x))",
        "answer": "A",
        "id": "FOLIO_15"
    },
    {
        "context": "\"Stranger Things\" is a popular Netflix show.\nIf a Netflix show is popular, Karen will binge-watch it.\nIf and only if Karen binge-watches a Netflix show, she will download it.\nKaren does not download \"Black Mirror\".\n\"Black Mirror\" is a Netflix show.\nIf Karen binge-watches a Netflix show, she will share it to Lisa.",
        "premises-FOL": "NetflixShow(strangerThings) ∧ Popular(strangerThings)\n∀x ((NetflixShow(x) ∧ Popular(x)) → BingeWatch(karen, x))\n∀x ((NetflixShow(x) ∧ BingeWatch(karen, x)) ↔ Download(karen, x))\n¬Download(karen, blackMirror)\nNetflixShow(blackMirror)\n∀x ((NetflixShow(x) ∧ BingeWatch(karen, x)) → Share(x, lisa))",
        "question": "Is the following statement true or false? Karen will share \"Stranger Things\" to Lisa.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "Share(strangerThings, lisa)",
        "answer": "A",
        "id": "FOLIO_16"
    },
    {
        "context": "\"Stranger Things\" is a popular Netflix show.\nIf a Netflix show is popular, Karen will binge-watch it.\nIf and only if Karen binge-watches a Netflix show, she will download it.\nKaren does not download \"Black Mirror\".\n\"Black Mirror\" is a Netflix show.\nIf Karen binge-watches a Netflix show, she will share it to Lisa.",
        "premises-FOL": "NetflixShow(strangerThings) ∧ Popular(strangerThings)\n∀x ((NetflixShow(x) ∧ Popular(x)) → BingeWatch(karen, x))\n∀x ((NetflixShow(x) ∧ BingeWatch(karen, x)) ↔ Download(karen, x))\n¬Download(karen, blackMirror)\nNetflixShow(blackMirror)\n∀x ((NetflixShow(x) ∧ BingeWatch(karen, x)) → Share(x, lisa))",
        "question": "Is the following statement true or false? \"Black Mirror\" is popular.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "Popular(blackMirror)",
        "answer": "B",
        "id": "FOLIO_17"
    },
    {
        "context": "Beijing is the capital of the People's Republic of China. \nBeijing is the world's most populous national capital city.\nBeijing is located in Northern China.\nBeijing hosted the 2008 Summer Olympics and 2008 Summer Paralympics Games.\nBeijing has hosted both the Summer and Winter Olympics, along with the Summer and Winter Paralympics\nMany of Beijing's 91 universities consistently rank among the best in the Asia-Pacific and the world.",
        "premises-FOL": "CapitalOf(beijing, prx)\nMostPopulousNationalCapitalCity(beijing)\nInNorthernChina(beijing)\nHosted(beijing, summer2008olympic) ∧ Hosted(beijing, summer2008paralympicgames)\nHosted(beijing, summerolympic) ∧ Hosted(beijing, winterolympic) ∧ Hosted(beijing, summerparalympicgames)  ∧ Hosted(beijing, winterparalympicgames)\n∃x (BeijingUniversity(x) ∧ ConsistentlyRankAmongTheBest(x))",
        "question": "Is the following statement true or false? Beijing has hosted both the 2008 Summer Olympics and a winter olympics.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "Hosted(beijing, summer2008olympic) ∧ Hosted(beijing, winterolympic)",
        "answer": "A",
        "id": "FOLIO_19"
    },
    {
        "context": "All aliens are extraterrestrial.\nIf someone is from Mars, then they are aliens.\nNo extraterrestrial is human.\nEveryone from Earth is a human.\nMarvin cannot be from Earth and from Mars.\nIf Marvin is not from Earth, then Marvin is an extraterrestrial.",
        "premises-FOL": "∀x (Alien(x) → Extraterrestrial(x))\n∀x (FromMars(x) → Alien(x))\n∀x (Extraterrestrial(x) → ¬Human(x))\n∀x (FromEarth(x) → Human(x))\n¬FromEarth(marvin) ∧ ¬FromMars(marvin)\n¬FromEarth(marvin) → Extraterrestrial(marvin)",
        "question": "Is the following statement true or false? Marvin is an alien.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "Alien(marvin)",
        "answer": "B",
        "id": "FOLIO_22"
    },
    {
        "context": "All aliens are extraterrestrial.\nIf someone is from Mars, then they are aliens.\nNo extraterrestrial is human.\nEveryone from Earth is a human.\nMarvin cannot be from Earth and from Mars.\nIf Marvin is not from Earth, then Marvin is an extraterrestrial.",
        "premises-FOL": "∀x (Alien(x) → Extraterrestrial(x))\n∀x (FromMars(x) → Alien(x))\n∀x (Extraterrestrial(x) → ¬Human(x))\n∀x (FromEarth(x) → Human(x))\n¬FromEarth(marvin) ∧ ¬FromMars(marvin)\n¬FromEarth(marvin) → Extraterrestrial(marvin)",
        "question": "Is the following statement true or false? Marvin is neither a human nor from Mars.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "¬Human(marvin) ∧ ¬FromMars(marvin)",
        "answer": "A",
        "id": "FOLIO_23"
    },
    {
        "context": "A person is either a Grand Slam champion or an Oscar-nominated actor.\nAll people who are Grand Slam champions are professional tennis players.\nAll Oscar-nominated actors are celebrities.\nAll professional tennis players are athletes.\nIf a person is a celebrity then they are well paid.\nIf a person is an athlete then they are famous.\nAll well-paid people live in tax havens.\nIf Djokovic is famous and is an athlete, then Djokovic lives in well paid.",
        "premises-FOL": "∀x (GrandSlamChampion(x) ⊕ OscarNominatedActor(x))\n∀x (GrandSlamChampion(x) → ProfessionalTennisPlayer(x))\n∀x (OscarNominatedActor(x) → Celebrity(x))\n∀x (ProfessionalTennisPlayer(x) → Athlete(x))\n∀x (Celebrity(x) → WellPaid(x))\n∀x (Athlete(x) → Famous(x))\n∀x (WellPaid(x) → LivesInTaxHaven(x))\nFamous(djokovic) ∧ Athlete(djokovic) → LivesInTaxHaven(djokovic)",
        "question": "Is the following statement true or false? Djokovic lives in a tax haven.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "LivesInTaxHaven(djokovic)",
        "answer": "A",
        "id": "FOLIO_26"
    },
    {
        "context": "A person is either a Grand Slam champion or an Oscar-nominated actor.\nAll people who are Grand Slam champions are professional tennis players.\nAll Oscar-nominated actors are celebrities.\nAll professional tennis players are athletes.\nIf a person is a celebrity then they are well paid.\nIf a person is an athlete then they are famous.\nAll well-paid people live in tax havens.\nIf Djokovic is famous and is an athlete, then Djokovic lives in well paid.",
        "premises-FOL": "∀x (GrandSlamChampion(x) ⊕ OscarNominatedActor(x))\n∀x (GrandSlamChampion(x) → ProfessionalTennisPlayer(x))\n∀x (OscarNominatedActor(x) → Celebrity(x))\n∀x (ProfessionalTennisPlayer(x) → Athlete(x))\n∀x (Celebrity(x) → WellPaid(x))\n∀x (Athlete(x) → Famous(x))\n∀x (WellPaid(x) → LivesInTaxHaven(x))\nFamous(djokovic) ∧ Athlete(djokovic) → LivesInTaxHaven(djokovic)",
        "question": "Is the following statement true or false? Djokovic does not live in a tax haven.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "¬LivesInTaxHaven(djokovic)",
        "answer": "B",
        "id": "FOLIO_27"
    },
    {
        "context": "Diamond Mine is a professional wrestling stable, formed in WWE.\nRoderick Strong leads Diamond Mine.\nDiamond Mine includes the Creed Brothers, and Ivy Nile.\nImperium has a feud with Diamond Mine.",
        "premises-FOL": "ProfessionalWrestlingStable(diamondmine) ∧ FormedIn(diamondmine, wwe)\nLeads(roderickstrong, diamondmine)\nIncludes(diamondmine, creedbrothers) ∧ Includes(diamondmine, ivynile)\nHasFeud(imperium, diamondmine)",
        "question": "Is the following statement true or false? Roderick strong leads a professional wrestling stable.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "∃x (Leads(roderickstrong, x) ∧ ProfessionalWrestlingStable(x))",
        "answer": "A",
        "id": "FOLIO_28"
    },
    {
        "context": "Diamond Mine is a professional wrestling stable, formed in WWE.\nRoderick Strong leads Diamond Mine.\nDiamond Mine includes the Creed Brothers, and Ivy Nile.\nImperium has a feud with Diamond Mine.",
        "premises-FOL": "ProfessionalWrestlingStable(diamondmine) ∧ FormedIn(diamondmine, wwe)\nLeads(roderickstrong, diamondmine)\nIncludes(diamondmine, creedbrothers) ∧ Includes(diamondmine, ivynile)\nHasFeud(imperium, diamondmine)",
        "question": "Is the following statement true or false? Imperium doesn't have a feud with a professional wrestling stable that includes Ivy Nile.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "∀x (ProfessionalWrestlingStable(x) ∧ Includes(x, ivynile) → ¬HasFeud(imperium, x))",
        "answer": "B",
        "id": "FOLIO_30"
    },
    {
        "context": "Symphony No. 9 is a music piece.\nComposers write music pieces.\nBeethoven wrote Symphony No. 9.\nVienna Music Society premiered Symphony No. 9.\nVienna Music Society is an orchestra.\nBeethoven leads the Vienna Music Society.\nOrchestras are led by conductors.",
        "premises-FOL": "MusicPiece(symphony9)\n∀x ∀y ((MusicPiece(x) ∧ Writtenby(x, y)) → Composer(y))\nWrittenby(symphony9, beethoven)\nPremiered(viennamusicsociety, symphony9)\nOrchestra(viennamusicsociety)\nLead(beethoven, viennamusicsociety)\n∀x ∀y ((Orchestra(x) ∧ Lead(y, x)) → Conductor(y))",
        "question": "Is the following statement true or false? Beethoven is a composer.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "Composer(beethoven)",
        "answer": "A",
        "id": "FOLIO_31"
    },
    {
        "context": "Symphony No. 9 is a music piece.\nComposers write music pieces.\nBeethoven wrote Symphony No. 9.\nVienna Music Society premiered Symphony No. 9.\nVienna Music Society is an orchestra.\nBeethoven leads the Vienna Music Society.\nOrchestras are led by conductors.",
        "premises-FOL": "MusicPiece(symphony9)\n∀x ∀y ((MusicPiece(x) ∧ Writtenby(x, y)) → Composer(y))\nWrittenby(symphony9, beethoven)\nPremiered(viennamusicsociety, symphony9)\nOrchestra(viennamusicsociety)\nLead(beethoven, viennamusicsociety)\n∀x ∀y ((Orchestra(x) ∧ Lead(y, x)) → Conductor(y))",
        "question": "Is the following statement true or false? Some orchestras premiered music pieces.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "∃x ∃y (Orchestra(x) ∧ MusicPiece(y) ∧ Premiered(x, y))",
        "answer": "A",
        "id": "FOLIO_32"
    },
    {
        "context": "Symphony No. 9 is a music piece.\nComposers write music pieces.\nBeethoven wrote Symphony No. 9.\nVienna Music Society premiered Symphony No. 9.\nVienna Music Society is an orchestra.\nBeethoven leads the Vienna Music Society.\nOrchestras are led by conductors.",
        "premises-FOL": "MusicPiece(symphony9)\n∀x ∀y ((MusicPiece(x) ∧ Writtenby(x, y)) → Composer(y))\nWrittenby(symphony9, beethoven)\nPremiered(viennamusicsociety, symphony9)\nOrchestra(viennamusicsociety)\nLead(beethoven, viennamusicsociety)\n∀x ∀y ((Orchestra(x) ∧ Lead(y, x)) → Conductor(y))",
        "question": "Is the following statement true or false? Beethoven is not a conductor.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "¬Conductor(beethoven)",
        "answer": "B",
        "id": "FOLIO_33"
    },
    {
        "context": "All of Zaha Hadid's design styles are timeless.\nNo mass product design is timeless.\nEither Zaha Hadid's design style or Kelly Wearstler's design style. \nAll of Kelly Wearstler's design styles are evocative.\nAll of Kelly Wearstler's design styles are dreamy.\nIf a design by Max is timeless, then a design by Max is a mass product design and evocative.",
        "premises-FOL": "∀x (ZahaHadidDesignStyle(x) → Timeless(x))\n∀x (MassProductDesign(x) → ¬Timeless(x))\n∀x (ZahaHadidDesignStyle(x) ∨ KellyWearstlerDesignStyle(x)) \n∀x (KellyWearstlerDesignStyle(x) → Evocative(x))\n∀x (KellyWearstlerDesignStyle(x) → Dreamy(x))\nTimeless(aDesignByMax) → MassProductDesign(aDesignByMax) ∧ Evocative(aDesignByMax)",
        "question": "Is the following statement true or false? A design by Max is evocative and dreamy.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "Evocative(aDesignByMax) ∧ Dreamy(aDesignByMax)",
        "answer": "A",
        "id": "FOLIO_35"
    },
    {
        "context": "All of Zaha Hadid's design styles are timeless.\nNo mass product design is timeless.\nEither Zaha Hadid's design style or Kelly Wearstler's design style. \nAll of Kelly Wearstler's design styles are evocative.\nAll of Kelly Wearstler's design styles are dreamy.\nIf a design by Max is timeless, then a design by Max is a mass product design and evocative.",
        "premises-FOL": "∀x (ZahaHadidDesignStyle(x) → Timeless(x))\n∀x (MassProductDesign(x) → ¬Timeless(x))\n∀x (ZahaHadidDesignStyle(x) ∨ KellyWearstlerDesignStyle(x)) \n∀x (KellyWearstlerDesignStyle(x) → Evocative(x))\n∀x (KellyWearstlerDesignStyle(x) → Dreamy(x))\nTimeless(aDesignByMax) → MassProductDesign(aDesignByMax) ∧ Evocative(aDesignByMax)",
        "question": "Is the following statement true or false? A design by Max is either evocative or dreamy.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "Evocative(aDesignByMax) ⊕ Dreamy(aDesignByMax)",
        "answer": "B",
        "id": "FOLIO_36"
    },
    {
        "context": "If a player is ranked highly by the Women's Tennis Association, then they are among the most active players in major tennis. \nEveryone who lost to Iga Świątek is ranked highly by the Women's Tennis Association.\nAll female tennis players at Roland Garros 2022 lost to Iga Świątek.\nEither female tennis players at Roland Garros 2022 or male tennis players at Roland Garros 2022. \nAll male tennis players at Roland Garros 2022 lost to Rafael Nadal.\nIf Coco Gauff is a player who is ranked highly by the Women's Tennis Association or a player who lost to Rafael Nadal, then Coco Gauff is not a male tennis player at Roland Garros 2022.",
        "premises-FOL": "∀x (RankedHighlyByWomenTennisAssociation(x) → AmongMostActivePlayersInMajorTennis(x))\n∀x (LostToIgaŚwiątek(x) → RankedHighlyByWomenTennisAssociation(x))\n∀x (FemaleTennisPlayersAtRolandGarros2022(x) → LostToIgaŚwiątek(x)) \n∀x (FemaleTennisPlayersAtRolandGarros2022(x) ∨ MaleTennisPlayersAtRolandGarros2022(x)) \n∀x (MaleTennisPlayersAtRolandGarros2022(x) → LostToRafaelNadal(x))\nRankedHighlyByWomenTennisAssociation(cocoGauff) ∨ LostToRafaelNadal(cocoGauff) → ¬MaleTennisPlayersAtRolandGarros2022(cocoGauff)",
        "question": "Is the following statement true or false? Coco Gauff is among the most active players in major tennis.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "AmongMostActivePlayersInMajorTennis(cocoGauff)",
        "answer": "A",
        "id": "FOLIO_37"
    },
    {
        "context": "If a player is ranked highly by the Women's Tennis Association, then they are among the most active players in major tennis. \nEveryone who lost to Iga Świątek is ranked highly by the Women's Tennis Association.\nAll female tennis players at Roland Garros 2022 lost to Iga Świątek.\nEither female tennis players at Roland Garros 2022 or male tennis players at Roland Garros 2022. \nAll male tennis players at Roland Garros 2022 lost to Rafael Nadal.\nIf Coco Gauff is a player who is ranked highly by the Women's Tennis Association or a player who lost to Rafael Nadal, then Coco Gauff is not a male tennis player at Roland Garros 2022.",
        "premises-FOL": "∀x (RankedHighlyByWomenTennisAssociation(x) → AmongMostActivePlayersInMajorTennis(x))\n∀x (LostToIgaŚwiątek(x) → RankedHighlyByWomenTennisAssociation(x))\n∀x (FemaleTennisPlayersAtRolandGarros2022(x) → LostToIgaŚwiątek(x)) \n∀x (FemaleTennisPlayersAtRolandGarros2022(x) ∨ MaleTennisPlayersAtRolandGarros2022(x)) \n∀x (MaleTennisPlayersAtRolandGarros2022(x) → LostToRafaelNadal(x))\nRankedHighlyByWomenTennisAssociation(cocoGauff) ∨ LostToRafaelNadal(cocoGauff) → ¬MaleTennisPlayersAtRolandGarros2022(cocoGauff)",
        "question": "Is the following statement true or false? Coco Gauff is not a player who lost to Iga Świątek or one of the most active players in major tennis.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "¬LostToIgaŚwiątek(cocoGauff) ∨ ¬AmongMostActivePlayersInMajorTennis(cocoGauff)",
        "answer": "B",
        "id": "FOLIO_39"
    },
    {
        "context": "[BG] There are four seasons in a year: Spring, Summer, Fall, and Winter.\nAll students who want to have a long vacation love summer the most.\nEmma's favorite season is summer.\nMia's favorite season is not the same as Emma's. \nJames wants to have a long vacation.",
        "premises-FOL": "Season(spring) ∨ Season(summer) ∨ Season(fall) ∨ Season(winter)\n∀x (WantlongVacation(x) → Love(x, summer))\nLove(emma, summer)\n¬Love(mia, emma)\nWantlongVacation(james)",
        "question": "Is the following statement true or false? James's favorite season is summer.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "Love(james, summer)",
        "answer": "A",
        "id": "FOLIO_41"
    },
    {
        "context": "[BG] There are four seasons in a year: Spring, Summer, Fall, and Winter.\nAll students who want to have a long vacation love summer the most.\nEmma's favorite season is summer.\nMia's favorite season is not the same as Emma's. \nJames wants to have a long vacation.",
        "premises-FOL": "Season(spring) ∨ Season(summer) ∨ Season(fall) ∨ Season(winter)\n∀x (WantlongVacation(x) → Love(x, summer))\nLove(emma, summer)\n¬Love(mia, emma)\nWantlongVacation(james)",
        "question": "Is the following statement true or false? James's favorite season is fall.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "Love(james, fall)",
        "answer": "B",
        "id": "FOLIO_42"
    },
    {
        "context": "No digital media are analog.\nEvery printed text is analog.\nAll streaming services are digital.\nIf an object is a hardcover book then it is printed text.\nIf 1984 is a streaming service, then 1984 is a hardcover book.",
        "premises-FOL": "∀x (Digital(x) → ¬Analog(x))\n∀x (PrintedText(x) → Analog(x))\n∀x (StreamingService(x) → Digital(x))\n∀x (HardcoverBook(x) → PrintedText(x))\nStreamingService(y1984) → HardcoverBook(y1984)",
        "question": "Is the following statement true or false? 1984 is a streaming service.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "StreamingService(y1984)",
        "answer": "B",
        "id": "FOLIO_45"
    },
    {
        "context": "No digital media are analog.\nEvery printed text is analog.\nAll streaming services are digital.\nIf an object is a hardcover book then it is printed text.\nIf 1984 is a streaming service, then 1984 is a hardcover book.",
        "premises-FOL": "∀x (Digital(x) → ¬Analog(x))\n∀x (PrintedText(x) → Analog(x))\n∀x (StreamingService(x) → Digital(x))\n∀x (HardcoverBook(x) → PrintedText(x))\nStreamingService(y1984) → HardcoverBook(y1984)",
        "question": "Is the following statement true or false? 1984 is not a streaming service.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "¬StreamingService(y1984)",
        "answer": "A",
        "id": "FOLIO_46"
    },
    {
        "context": "All Romance languages are Indo-European languages.\nThe Romance languages are a language family.\nAll languages within a language family are related to each other.\nFrench and Spanish are both Romance languages.\nGerman is related to Spanish.\nBasque is not related to any other language.",
        "premises-FOL": "∀x (RomanceLanguage(x) → IndoEuropeanLanguage(x))\n∀x (RomanceLanguage(x) → MemberOf(x, romancefamily))\n∀x ∀y ∀z ((MemberOf(x, z) ∧ MemberOf(y, z)) → (Related(x, y) ∧ Related(y, x)))\nRomanceLanguage(french) ∧ RomanceLanguage(spanish)\nRelated(german, spanish)\n∀x (¬Related(basque, x))",
        "question": "Is the following statement true or false? Basque is a Romance language.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "RomanceLanguage(basque)",
        "answer": "B",
        "id": "FOLIO_47"
    },
    {
        "context": "All Romance languages are Indo-European languages.\nThe Romance languages are a language family.\nAll languages within a language family are related to each other.\nFrench and Spanish are both Romance languages.\nGerman is related to Spanish.\nBasque is not related to any other language.",
        "premises-FOL": "∀x (RomanceLanguage(x) → IndoEuropeanLanguage(x))\n∀x (RomanceLanguage(x) → MemberOf(x, romancefamily))\n∀x ∀y ∀z ((MemberOf(x, z) ∧ MemberOf(y, z)) → (Related(x, y) ∧ Related(y, x)))\nRomanceLanguage(french) ∧ RomanceLanguage(spanish)\nRelated(german, spanish)\n∀x (¬Related(basque, x))",
        "question": "Is the following statement true or false? French is an Indo-European language.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "IndoEuropeanLanguage(french)",
        "answer": "A",
        "id": "FOLIO_49"
    },
    {
        "context": "Robert Lewandowski is a striker.\n[BG] Strikers are soccer players.\nRobert Lewandowski left Bayern Munchen.\n[BG] If a player left a team they no longer play for that team.",
        "premises-FOL": "IsStriker(robertLewandowski)\n∀x (IsStriker(x) → IsSoccerPlayer(x))\nLeftTeam(robertLewandowski, bayernMunchen)\n∀x ∀y (LeftTeam(x, y) → ¬PlaysForTeam(x, y))",
        "question": "Is the following statement true or false? Robert Lewandowski is a soccer player.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "IsSoccerPlayer(robertLewandowski)",
        "answer": "A",
        "id": "FOLIO_50"
    },
    {
        "context": "Robert Lewandowski is a striker.\n[BG] Strikers are soccer players.\nRobert Lewandowski left Bayern Munchen.\n[BG] If a player left a team they no longer play for that team.",
        "premises-FOL": "IsStriker(robertLewandowski)\n∀x (IsStriker(x) → IsSoccerPlayer(x))\nLeftTeam(robertLewandowski, bayernMunchen)\n∀x ∀y (LeftTeam(x, y) → ¬PlaysForTeam(x, y))",
        "question": "Is the following statement true or false? Robert Lewandowski plays for Bayern Munchen.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "PlaysForTeam(robertLewandowski, bayernMunchen)",
        "answer": "B",
        "id": "FOLIO_51"
    },
    {
        "context": "Billings is a city in Montana.\nMontana includes the cities of Butte, Helena, and Missoula.\nWhite Sulphur Springs and Butte are cities in the same state.\nThe city of Pierre is not in Montana.\nAny city in Butte is not in Pierre.",
        "premises-FOL": "CityIn(billings, montana)\nCityIn(butte, montana) ∧ CityIn(helena, montana) ∧ CityIn(missoula, montana)\n∃x (CityIn(whitesulphursprings, x) ∧ CityIn(butte, x))\n¬CityIn(pierre, montana)\n∀x (CityIn(butte, x) → ¬CityIn(pierre, x))",
        "question": "Is the following statement true or false? Butte and Pierre are in the same state.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "∃x (CityIn(butte, x) ∧ CityIn(pierre, x))",
        "answer": "B",
        "id": "FOLIO_53"
    },
    {
        "context": "Billings is a city in Montana.\nMontana includes the cities of Butte, Helena, and Missoula.\nWhite Sulphur Springs and Butte are cities in the same state.\nThe city of Pierre is not in Montana.\nAny city in Butte is not in Pierre.",
        "premises-FOL": "CityIn(billings, montana)\nCityIn(butte, montana) ∧ CityIn(helena, montana) ∧ CityIn(missoula, montana)\n∃x (CityIn(whitesulphursprings, x) ∧ CityIn(butte, x))\n¬CityIn(pierre, montana)\n∀x (CityIn(butte, x) → ¬CityIn(pierre, x))",
        "question": "Is the following statement true or false? Montana is home to the city of Missoula.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "CityIn(missoula, montana)",
        "answer": "A",
        "id": "FOLIO_55"
    },
    {
        "context": "All cows are bovines.\nSome pets are cows.\nIf something is a bovine, then it is domesticated.\nNo domesticated animals are alligators.\nTed is an aligator.",
        "premises-FOL": "∀x (Cow(x) → Bovine(x))\n∃x (Pet(x) ∧ Cow(x))\n∀x (Bovine(x) → Domesticated(x))\n∀x (Domesticated(x) → ¬Aligator(x))\nAligator(ted)",
        "question": "Is the following statement true or false? Ted is a pet and a cow.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "Pet(ted) ∧ Cow(ted)",
        "answer": "B",
        "id": "FOLIO_59"
    },
    {
        "context": "All cows are bovines.\nSome pets are cows.\nIf something is a bovine, then it is domesticated.\nNo domesticated animals are alligators.\nTed is an aligator.",
        "premises-FOL": "∀x (Cow(x) → Bovine(x))\n∃x (Pet(x) ∧ Cow(x))\n∀x (Bovine(x) → Domesticated(x))\n∀x (Domesticated(x) → ¬Aligator(x))\nAligator(ted)",
        "question": "Is the following statement true or false? If Ted is a cow, then Ted is not a pet.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "Cow(ted) → ¬Pet(ted)",
        "answer": "A",
        "id": "FOLIO_60"
    },
    {
        "context": "Yale University is a private Ivy League research university.\nYale University moved to New Haven in 1716.\nYale university's endowment was valued at $42.3 billion.\nYale University has been organized into 27 constituent colleges and schools: the residential colleges, the Yale Graduate School of Arts and Sciences, and twelve professional schools.\nA list of residential colleges at Yale: Benjamin Franklin College, Berkeley College, Branford College, Davenport College, Ezra Stiles College, Grace Hopper College, Jonathan Edwards College, Morse College, Pauli Murray College, Pierson College, Saybrook College, Silliman College, Timothy Dwight College, and Trumbull College.",
        "premises-FOL": "PrivateIvyLeagueResearchUniversity(yale)\nMovedTo(yale, newhaven) ∧ MovedIn(yale, y1716)\nValuedAt(yalesendowment, y42.3billion)\n∃x (OrganizedInto(yale, x) ∧ ConstituentCollegesandSchools(x) ∧ ((ResidentialCollege(x) ⊕ GraduateSchool(x)) ⊕ ProfessionalSchool(x)))\nResidentialCollege(benjaminfranklincollege) ∧ AtYale(benjaminfranklincollege) ∧ ResidentialCollege(berkeleycollege) ∧ AtYale(berkeleycollege) ∧ ResidentialCollege(branfordcollege) ∧ AtYale(branfordcollege) ∧ ResidentialCollege(davenportcollege) ∧ AtYale(davenportcollege) ∧ ResidentialCollege(ezrastilescollege) ∧ AtYale(ezrastilescollege) ∧ ResidentialCollege(gracehoppercollege) ∧ AtYale(gracehoppercollege) ∧ ResidentialCollege(jonathanedwardscollege) ∧ AtYale(jonathanedwardscollege) ∧ ResidentialCollege(morsecollege) ∧ AtYale(morsecollege) ∧ ResidentialCollege(paulimurraycollege) ∧ AtYale(paulimurraycollege) ∧ ResidentialCollege(piersoncollege) ∧ AtYale(piersoncollege) ∧ ResidentialCollege(saybrookcollege) ∧ AtYale(saybrookcollege) ∧ ResidentialCollege(sillimancollege) ∧ AtYale(sillimancollege) ∧ ResidentialCollege(timothydwightcollege) ∧ AtYale(timothydwightcollege) ∧ ResidentialCollege(trumbullcollege) ∧ AtYale(trumbullcollege)",
        "question": "Is the following statement true or false? A private Ivy League research university moved to New Haven.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "∃x (PrivateIvyLeagueResearchUniversity(x) ∧ MovedTo(x, newhaven))",
        "answer": "A",
        "id": "FOLIO_61"
    },
    {
        "context": "Yale University is a private Ivy League research university.\nYale University moved to New Haven in 1716.\nYale university's endowment was valued at $42.3 billion.\nYale University has been organized into 27 constituent colleges and schools: the residential colleges, the Yale Graduate School of Arts and Sciences, and twelve professional schools.\nA list of residential colleges at Yale: Benjamin Franklin College, Berkeley College, Branford College, Davenport College, Ezra Stiles College, Grace Hopper College, Jonathan Edwards College, Morse College, Pauli Murray College, Pierson College, Saybrook College, Silliman College, Timothy Dwight College, and Trumbull College.",
        "premises-FOL": "PrivateIvyLeagueResearchUniversity(yale)\nMovedTo(yale, newhaven) ∧ MovedIn(yale, y1716)\nValuedAt(yalesendowment, y42.3billion)\n∃x (OrganizedInto(yale, x) ∧ ConstituentCollegesandSchools(x) ∧ ((ResidentialCollege(x) ⊕ GraduateSchool(x)) ⊕ ProfessionalSchool(x)))\nResidentialCollege(benjaminfranklincollege) ∧ AtYale(benjaminfranklincollege) ∧ ResidentialCollege(berkeleycollege) ∧ AtYale(berkeleycollege) ∧ ResidentialCollege(branfordcollege) ∧ AtYale(branfordcollege) ∧ ResidentialCollege(davenportcollege) ∧ AtYale(davenportcollege) ∧ ResidentialCollege(ezrastilescollege) ∧ AtYale(ezrastilescollege) ∧ ResidentialCollege(gracehoppercollege) ∧ AtYale(gracehoppercollege) ∧ ResidentialCollege(jonathanedwardscollege) ∧ AtYale(jonathanedwardscollege) ∧ ResidentialCollege(morsecollege) ∧ AtYale(morsecollege) ∧ ResidentialCollege(paulimurraycollege) ∧ AtYale(paulimurraycollege) ∧ ResidentialCollege(piersoncollege) ∧ AtYale(piersoncollege) ∧ ResidentialCollege(saybrookcollege) ∧ AtYale(saybrookcollege) ∧ ResidentialCollege(sillimancollege) ∧ AtYale(sillimancollege) ∧ ResidentialCollege(timothydwightcollege) ∧ AtYale(timothydwightcollege) ∧ ResidentialCollege(trumbullcollege) ∧ AtYale(trumbullcollege)",
        "question": "Is the following statement true or false? Pierson College is a residential college at Yale.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "ResidentialCollege(piersoncollege) ∧ AtYale(piersoncollege)",
        "answer": "A",
        "id": "FOLIO_63"
    },
    {
        "context": "Badults is a British Sitcom series, starring members of Pappy's.\nBadults piloted in July 2013 on BBC Three.\nThe Working title \"The Secret Dude Society\" was used for Badults.\nAndrew Collins was the script editor for Badults",
        "premises-FOL": "∃x (MemberOf(x, pappys) ∧ BritishSitcom(badults) ∧ Series(badults) ∧ Starring(badults, x))\nPilotedIn(badults, july2013) ∧ PilotedOn(badults, bbcthree)\nWorkingTitle(thesecretdudesociety, badults)\nScriptEditor(andrewcollins) ∧ ScriptEditorFor(andrewcollins, badults)",
        "question": "Is the following statement true or false? Andrew Collins was the script editor for a series with the working title \"The Secret Dude Society\".",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "∃x (ScriptEditorFor(andrewcollins, x) ∧ Series(x) ∧ WorkingTitle(thesecretdudesociety, x))",
        "answer": "A",
        "id": "FOLIO_64"
    },
    {
        "context": "Badults is a British Sitcom series, starring members of Pappy's.\nBadults piloted in July 2013 on BBC Three.\nThe Working title \"The Secret Dude Society\" was used for Badults.\nAndrew Collins was the script editor for Badults",
        "premises-FOL": "∃x (MemberOf(x, pappys) ∧ BritishSitcom(badults) ∧ Series(badults) ∧ Starring(badults, x))\nPilotedIn(badults, july2013) ∧ PilotedOn(badults, bbcthree)\nWorkingTitle(thesecretdudesociety, badults)\nScriptEditor(andrewcollins) ∧ ScriptEditorFor(andrewcollins, badults)",
        "question": "Is the following statement true or false? No members of Pappy's have starred for a show piloting on BBC Two or BBC Three.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "∀x ∀y (MemberOf(x, pappys) ∧ Starring(y, x) → ¬(PilotedOn(y, bbctwo) ∨ PilotedOn(y, bbcthree)))",
        "answer": "B",
        "id": "FOLIO_65"
    },
    {
        "context": "All growth companies’ stocks are volatile.\nIf the stock price is volatile, then it is not suitable for a retirement fund.\nSome companies’ stocks are growth companies’ stocks.\nAll mature companies’ stocks are suitable for a retirement fund.\nKO is a mature company’s stock.",
        "premises-FOL": "∀x (GrowthCompanies’Stocks(x) → PriceVolatile(x))\n ∀x (PriceVolatile(x) → ¬SuitableForRetirementRund(x)) \n ∃x (Companies’Stocks(x) ∧ GrowthCompanies’Stocks(x))\n ∀x (MatureCompanies’Stocks(x) → SuitableForRetirementRund(x))\n MatureCompanies’Stocks(kO)",
        "question": "Is the following statement true or false? KO is a company stock and a growth company’s stock.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "Companies’Stocks(kO) ∧ GrowthCompanies’Stocks(kO)",
        "answer": "B",
        "id": "FOLIO_67"
    },
    {
        "context": "All growth companies’ stocks are volatile.\nIf the stock price is volatile, then it is not suitable for a retirement fund.\nSome companies’ stocks are growth companies’ stocks.\nAll mature companies’ stocks are suitable for a retirement fund.\nKO is a mature company’s stock.",
        "premises-FOL": "∀x (GrowthCompanies’Stocks(x) → PriceVolatile(x))\n ∀x (PriceVolatile(x) → ¬SuitableForRetirementRund(x)) \n ∃x (Companies’Stocks(x) ∧ GrowthCompanies’Stocks(x))\n ∀x (MatureCompanies’Stocks(x) → SuitableForRetirementRund(x))\n MatureCompanies’Stocks(kO)",
        "question": "Is the following statement true or false? If KO is a growth company’s stock or if its price is volatile, then KO is neither a company’s stock nor is its price volatile.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "GrowthCompanies’Stocks(kO) ∨ PriceVolatile(kO) → ¬Companies’Stocks(kO) ∨ ¬PriceVolatile(kO)",
        "answer": "A",
        "id": "FOLIO_68"
    },
    {
        "context": "All vehicle registration plates in Istanbul begin with the number 34.\nPlates that do not begin with the number 34 are not from Istanbul. \nJoe's vehicle registration plate is from Istanbul. \nTom's license plate begins with the number 35. \n[BG] If a license plate begins with the number 35, then it does not begin with the number 34.",
        "premises-FOL": "∀x (Vehicleregistrationplate(x, istanbul) → Beginwith(x, number34))\n∀x (¬Beginwith(x, number34) → ¬FromIstanbul(x))\nVehicleregistrationplate(joe, istanbul)\nBeginwith(tom, number35)\n∀x (Beginwith(x, number35) → ¬Beginwith(x, number34))",
        "question": "Is the following statement true or false? Joe's license plate begins with the number 34.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "Beginwith(joe, number34)",
        "answer": "A",
        "id": "FOLIO_69"
    },
    {
        "context": "All vehicle registration plates in Istanbul begin with the number 34.\nPlates that do not begin with the number 34 are not from Istanbul. \nJoe's vehicle registration plate is from Istanbul. \nTom's license plate begins with the number 35. \n[BG] If a license plate begins with the number 35, then it does not begin with the number 34.",
        "premises-FOL": "∀x (Vehicleregistrationplate(x, istanbul) → Beginwith(x, number34))\n∀x (¬Beginwith(x, number34) → ¬FromIstanbul(x))\nVehicleregistrationplate(joe, istanbul)\nBeginwith(tom, number35)\n∀x (Beginwith(x, number35) → ¬Beginwith(x, number34))",
        "question": "Is the following statement true or false? Tom's license plate is from Istanbul.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "Vehicleregistrationplate(tom, istanbul)",
        "answer": "B",
        "id": "FOLIO_70"
    },
    {
        "context": "If people work in student jobs on campus, then they need to earn money to help pay for their college tuition.\nIf people order takeout frequently in college, then they work in student jobs on campus.\nPeople either order takeout frequently in college or enjoy the dining hall meals and recipes.\nIf people enjoy the dining hall meals and recipes, then they are not picky eaters.\nIf people enjoy the dining hall meals and recipes, then they spend a lot of their time eating and catching up with friends in the campus dining halls.\nIf Mary works in student jobs on campus and needs to earn money to help pay for her college tuition, then Mary is neither picky nor needs to earn money to help pay for her college tuition.",
        "premises-FOL": "∀x (StudentJobs(x) → Tuition(x))\n∀x (Takeout(x) → StudentJobs(x))\n∀x (Takeout(x) ∨ DiningHall(x))\n∀x (DiningHall(x) → NotPicky(x))\n∀x (DiningHall(x) → Eating(x))\nStudentJobs(mary) ∧ Tuition(mary) → ¬(NotPicky(mary) ∨ Tuition(mary))",
        "question": "Is the following statement true or false? Mary is not a picky eater and spends a lot of her time eating and catching up with friends in the campus dining halls.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "NotPicky(mary) ∧ Eating(mary)",
        "answer": "A",
        "id": "FOLIO_72"
    },
    {
        "context": "If people work in student jobs on campus, then they need to earn money to help pay for their college tuition.\nIf people order takeout frequently in college, then they work in student jobs on campus.\nPeople either order takeout frequently in college or enjoy the dining hall meals and recipes.\nIf people enjoy the dining hall meals and recipes, then they are not picky eaters.\nIf people enjoy the dining hall meals and recipes, then they spend a lot of their time eating and catching up with friends in the campus dining halls.\nIf Mary works in student jobs on campus and needs to earn money to help pay for her college tuition, then Mary is neither picky nor needs to earn money to help pay for her college tuition.",
        "premises-FOL": "∀x (StudentJobs(x) → Tuition(x))\n∀x (Takeout(x) → StudentJobs(x))\n∀x (Takeout(x) ∨ DiningHall(x))\n∀x (DiningHall(x) → NotPicky(x))\n∀x (DiningHall(x) → Eating(x))\nStudentJobs(mary) ∧ Tuition(mary) → ¬(NotPicky(mary) ∨ Tuition(mary))",
        "question": "Is the following statement true or false? Mary either is not a picky eater or, if she is, then she spends a lot of her time eating and catching up with friends in the campus dining halls.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "NotPicky(mary) ⊕ Eating(mary)",
        "answer": "B",
        "id": "FOLIO_73"
    },
    {
        "context": "No bakery is spicy.\nAll cupcakes are bakeries.\nAll hotpots are spicy.\nAll products of Baked by Melissa are cupcakes.\nIf dried Thai chilies are spicy or a bakery, then dried Thai chilies are a hotpot or are spicy.",
        "premises-FOL": "∀x (Bakery(x) → ¬Spicy(x))\n∀x (Cupcakes(x) → Bakery(x))\n∀x (Hotpot(x) → Spicy(x))\n∀x (ProductsOfBakedByMelissa(x) → Cupcakes(x))\nSpicy(driedThaiChilies) ∨ Bakery(driedThaiChilies) → Hotpot(driedThaiChilies) ∨ Spicy(driedThaiChilies)",
        "question": "Is the following statement true or false? Dried Thai chilies are a product of Baked by Melissa.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "ProductsOfBakedByMelissa(driedThaiChilies)",
        "answer": "B",
        "id": "FOLIO_74"
    },
    {
        "context": "No bakery is spicy.\nAll cupcakes are bakeries.\nAll hotpots are spicy.\nAll products of Baked by Melissa are cupcakes.\nIf dried Thai chilies are spicy or a bakery, then dried Thai chilies are a hotpot or are spicy.",
        "premises-FOL": "∀x (Bakery(x) → ¬Spicy(x))\n∀x (Cupcakes(x) → Bakery(x))\n∀x (Hotpot(x) → Spicy(x))\n∀x (ProductsOfBakedByMelissa(x) → Cupcakes(x))\nSpicy(driedThaiChilies) ∨ Bakery(driedThaiChilies) → Hotpot(driedThaiChilies) ∨ Spicy(driedThaiChilies)",
        "question": "Is the following statement true or false? Dried Thai chilies are not a product of Baked by Melissa.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "¬ProductsOfBakedByMelissa(driedThaiChilies)",
        "answer": "A",
        "id": "FOLIO_75"
    },
    {
        "context": "No bakery is spicy.\nAll cupcakes are bakeries.\nAll hotpots are spicy.\nAll products of Baked by Melissa are cupcakes.\nIf dried Thai chilies are spicy or a bakery, then dried Thai chilies are a hotpot or are spicy.",
        "premises-FOL": "∀x (Bakery(x) → ¬Spicy(x))\n∀x (Cupcakes(x) → Bakery(x))\n∀x (Hotpot(x) → Spicy(x))\n∀x (ProductsOfBakedByMelissa(x) → Cupcakes(x))\nSpicy(driedThaiChilies) ∨ Bakery(driedThaiChilies) → Hotpot(driedThaiChilies) ∨ Spicy(driedThaiChilies)",
        "question": "Is the following statement true or false? Dried Thai chilies are neither a product of Baked by Melissa nor a bakery.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "¬ProductsOfBakedByMelissa(driedThaiChilies) ∧ ¬Bakery(driedThaiChilies)",
        "answer": "A",
        "id": "FOLIO_77"
    },
    {
        "context": "No bakery is spicy.\nAll cupcakes are bakeries.\nAll hotpots are spicy.\nAll products of Baked by Melissa are cupcakes.\nIf dried Thai chilies are spicy or a bakery, then dried Thai chilies are a hotpot or are spicy.",
        "premises-FOL": "∀x (Bakery(x) → ¬Spicy(x))\n∀x (Cupcakes(x) → Bakery(x))\n∀x (Hotpot(x) → Spicy(x))\n∀x (ProductsOfBakedByMelissa(x) → Cupcakes(x))\nSpicy(driedThaiChilies) ∨ Bakery(driedThaiChilies) → Hotpot(driedThaiChilies) ∨ Spicy(driedThaiChilies)",
        "question": "Is the following statement true or false? Dried Thai chilies are cupcakes and a product of Baked by Melissa.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "Cupcake(driedThaiChilies) ∧ ProductsOfBakedByMelissa(driedThaiChilies)",
        "answer": "B",
        "id": "FOLIO_78"
    },
    {
        "context": "If the restaurant is listed in Yelp’s recommendations, then the restaurant does not receive many negative reviews.\nAll restaurants with a rating greater than 9 are listed in Yelp’s recommendations.\nSome restaurants that do not provide take-out service receive many negative reviews.\nAll restaurants that are popular among local residents have ratings greater than 9.\nSubway has a rating greater than 9 or is popular among local residents.",
        "premises-FOL": "∀x (YelpRecommendation(x) → ¬NegativeReview(x))\n∀x (RatingGreaterThan9(x) → YelpRecommendation(x))\n∃x (NoTakeOutService(x) ∧ NegativeReview(x))\n∀x (PopularAmongLocalResidents(x) → RatingGreaterThan9(x))\nRatingGreaterThan9(subway) ⊕ PopularAmongLocalResidents(subway)",
        "question": "Is the following statement true or false? Subway provides take-out service and does not receive many negative reviews.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "¬(NoTakeOutService(subway) ∧ NegativeReview(subway))",
        "answer": "A",
        "id": "FOLIO_80"
    },
    {
        "context": "If the restaurant is listed in Yelp’s recommendations, then the restaurant does not receive many negative reviews.\nAll restaurants with a rating greater than 9 are listed in Yelp’s recommendations.\nSome restaurants that do not provide take-out service receive many negative reviews.\nAll restaurants that are popular among local residents have ratings greater than 9.\nSubway has a rating greater than 9 or is popular among local residents.",
        "premises-FOL": "∀x (YelpRecommendation(x) → ¬NegativeReview(x))\n∀x (RatingGreaterThan9(x) → YelpRecommendation(x))\n∃x (NoTakeOutService(x) ∧ NegativeReview(x))\n∀x (PopularAmongLocalResidents(x) → RatingGreaterThan9(x))\nRatingGreaterThan9(subway) ⊕ PopularAmongLocalResidents(subway)",
        "question": "Is the following statement true or false? Subway does not provide take-out service.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "¬(NoTakeOutService(subway) ∧ NegativeReview(subway)) → PopularAmongLocalResidents(subway) ∧ NoTakeOutService(subway)",
        "answer": "B",
        "id": "FOLIO_81"
    },
    {
        "context": "In superhero movies, the good guys always win.\nThe Surprising Adventures of Sir Digby Chicken Caesar is a superhero movie.\nGood guys fight bad guys and vice versa.\nSir Digby fights his nemesis.\nIf a superhero movie is named after a character, that character is a good guy.\nThe Surprising Adventures of Sir Digby Chicken Caesar is named after Sir Digby.\nIf somebody wins a fight, the person they are fighting loses.\nIf a superhero movie is named after a character, that character appears in the movie.",
        "premises-FOL": "∀x ∀y (SuperheroMovie(x) ∧ GoodGuy(y) ∧ AppearsIn(y, x) → Wins(y))\nSuperheroMovie(surprisingAdventuresofSirDigbyChickenCaesar)\n∀x ∀y (GoodGuy(x) ∧ Fights(x, y) ⟷ BadGuy(y) ∧ Fights(y, x))\nFights(sirDigby, sirDigbyNemesis)\n∀x ∀y (SuperheroMovie(x), NamedAfter(x, y) → GoodGuy(y))\nNamedAfter(surprisingAdventuresofSirDigbyChickenCaesar, sirDigby)\n∀x ∀y (Fights(x, y) ∧ Wins(x) → ¬Wins(y))",
        "question": "Is the following statement true or false? Sir Digby’s nemesis loses.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "∀x ∀y (SuperheroMovie(x) ∧ AppearsIn(y, x) → GoodGuy(y))",
        "answer": "A",
        "id": "FOLIO_82"
    },
    {
        "context": "[BG] Books contain tons of knowledge.\n[BG] When a person reads a book, that person gains knowledge. \n[BG] If a person gains knowledge, they become smarter.\nHarry read the book “Walden” by Henry Thoreau.",
        "premises-FOL": "∀x (Book(x) → Knowledge(x))\n∀x ∀y (ReadBook(x, y) → GainKnowledge(x))\n∀x (GainKnowledge(x) → Smarter(x))\nReadBook(harry, walden) ∧ Book(walden)",
        "question": "Is the following statement true or false? Walden contains knowledge.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "Knowledge(walden)",
        "answer": "A",
        "id": "FOLIO_83"
    },
    {
        "context": "[BG] Books contain tons of knowledge.\n[BG] When a person reads a book, that person gains knowledge. \n[BG] If a person gains knowledge, they become smarter.\nHarry read the book “Walden” by Henry Thoreau.",
        "premises-FOL": "∀x (Book(x) → Knowledge(x))\n∀x ∀y (ReadBook(x, y) → GainKnowledge(x))\n∀x (GainKnowledge(x) → Smarter(x))\nReadBook(harry, walden) ∧ Book(walden)",
        "question": "Is the following statement true or false? Harry is smarter than before.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "Smarter(harry)",
        "answer": "A",
        "id": "FOLIO_84"
    },
    {
        "context": "Natural language processing tasks can be categorized as either language generation task or language understanding task.\nIf the output of a natural language processing task is a text sequence, then it is a language generation task.\nMachine translation is a natural language processing task.\nThe output of machine translation is a text sequence.",
        "premises-FOL": "∀x (NLP(x) → NLG(x) ⊕ NLU(x))\n∀x (NLP(x) ∧ OutputSequence(x) → NLG(x))\nNLP(machineTranslation)\nOutputSequence(machineTranslation)",
        "question": "Is the following statement true or false? Machine translation is a language generation task.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "NLG(machineTranslation)",
        "answer": "A",
        "id": "FOLIO_86"
    },
    {
        "context": "Natural language processing tasks can be categorized as either language generation task or language understanding task.\nIf the output of a natural language processing task is a text sequence, then it is a language generation task.\nMachine translation is a natural language processing task.\nThe output of machine translation is a text sequence.",
        "premises-FOL": "∀x (NLP(x) → NLG(x) ⊕ NLU(x))\n∀x (NLP(x) ∧ OutputSequence(x) → NLG(x))\nNLP(machineTranslation)\nOutputSequence(machineTranslation)",
        "question": "Is the following statement true or false? Machine translation is a language understanding task.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "NLU(machineTranslation)",
        "answer": "B",
        "id": "FOLIO_87"
    },
    {
        "context": "Pets are allowed in some managed buildings.\n[BG] A deposit is required to rent an apartment in a managed building.\nThe security deposit can be either equal to one month's rent or more.\nFluffy is Tom's cat.\nCats are pets.\nThe Olive Garden is a managed building.\nThe monthly rent at the Olive Garden is $2000.\nTom will rent an apartment in a managed building if and only if he is allowed to move in with Fluffy, and the security deposit is no more than $1500.\n2000$ is more than $1500.",
        "premises-FOL": "∃x (ManagedBuilding(x) ∧ AllowPet(x))\n∀x (ManagedBuilding(x) → RequireDeposit(x))\n∀x (Rent2000(x) ↔ ¬DepositNoMoreThan1500(x))\n∀x (Rent2000(x) ↔ DepositNoLessThan2000(x))\nCat(fluffy)\n∀x (Cat(x) → Pet(x))\nManagedBuilding(oliveGarden)\nRent2000(oliveGarden)\n∀x (TomRent(x) ↔ (ManagedBuilding(x) ∧ AllowPet(x) ∧ DepositNoMoreThan1500(x)))",
        "question": "Is the following statement true or false? Tom will rent an apartment in The Olive Garden.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "TomRent(oliveGarden)",
        "answer": "B",
        "id": "FOLIO_88"
    },
    {
        "context": "Pets are allowed in some managed buildings.\n[BG] A deposit is required to rent an apartment in a managed building.\nThe security deposit can be either equal to one month's rent or more.\nFluffy is Tom's cat.\nCats are pets.\nThe Olive Garden is a managed building.\nThe monthly rent at the Olive Garden is $2000.\nTom will rent an apartment in a managed building if and only if he is allowed to move in with Fluffy, and the security deposit is no more than $1500.\n2000$ is more than $1500.",
        "premises-FOL": "∃x (ManagedBuilding(x) ∧ AllowPet(x))\n∀x (ManagedBuilding(x) → RequireDeposit(x))\n∀x (Rent2000(x) ↔ ¬DepositNoMoreThan1500(x))\n∀x (Rent2000(x) ↔ DepositNoLessThan2000(x))\nCat(fluffy)\n∀x (Cat(x) → Pet(x))\nManagedBuilding(oliveGarden)\nRent2000(oliveGarden)\n∀x (TomRent(x) ↔ (ManagedBuilding(x) ∧ AllowPet(x) ∧ DepositNoMoreThan1500(x)))",
        "question": "Is the following statement true or false? The security deposit at the Olive Garden is either $2000 or more.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "DepositNoLessThan2000(oliveGarden)",
        "answer": "A",
        "id": "FOLIO_90"
    },
    {
        "context": "If animals are loved by tourists, then they are Max's favorite animals. \nAll animals from Australia are loved by tourists. \nAll quokka are animals from Australia. \nAll of Max's favorite animals are very fluffy.\nAll of Max's favorite animals love to sleep. \nIf a koala is very fluffy, then the koala is not a quokka.",
        "premises-FOL": "∀x (AnimalsLovedByTourists(x) → MaxFavoriteAnimals(x))\n ∀x (AnimalsFromAustralia(x) → AnimalsLovedByTourists(x))\n ∀x (Quokka(x) → AnimalsFromAustralia(x))\n ∀x (MaxFavoriteAnimals(x) → VeryFluffy(x)) \n ∀x (MaxFavoriteAnimals(x) → LoveToSleep(x))\n VeryFluffy(koala) → ¬Quokka(koala)",
        "question": "Is the following statement true or false? Koalas love to sleep and are quokka.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "LoveToSleep(koala) ∧ Quokka(koala)",
        "answer": "B",
        "id": "FOLIO_92"
    },
    {
        "context": "If animals are loved by tourists, then they are Max's favorite animals. \nAll animals from Australia are loved by tourists. \nAll quokka are animals from Australia. \nAll of Max's favorite animals are very fluffy.\nAll of Max's favorite animals love to sleep. \nIf a koala is very fluffy, then the koala is not a quokka.",
        "premises-FOL": "∀x (AnimalsLovedByTourists(x) → MaxFavoriteAnimals(x))\n ∀x (AnimalsFromAustralia(x) → AnimalsLovedByTourists(x))\n ∀x (Quokka(x) → AnimalsFromAustralia(x))\n ∀x (MaxFavoriteAnimals(x) → VeryFluffy(x)) \n ∀x (MaxFavoriteAnimals(x) → LoveToSleep(x))\n VeryFluffy(koala) → ¬Quokka(koala)",
        "question": "Is the following statement true or false? If a koala is a quokka, then the koala either loves to sleep or is very fluffy.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "Quokka(koala) → LoveToSleep(koala) ⊕ VeryFluffy(koala)",
        "answer": "A",
        "id": "FOLIO_93"
    },
    {
        "context": "A man is either kind or evil.\nNo ugly person is handsome.\nAll evil people are ugly.\nAll gentlemen are handsome.\nAll CEOs are gentlemen.\nHarry is a gentleman.",
        "premises-FOL": "∀x (Kind(x) ⊕ Evil(x))\n∀x (Ugly(x) → ¬Handsome(x))\n∀x (Evil(x) → Ugly(x))\n∀x (Gentleman(x) → Handsome(x))\n∀x (CEO(x) → Gentleman(x))\nGentleman(harry)",
        "question": "Is the following statement true or false? Harry is kind or a CEO.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "Kind(harry) ∨ CEO(harry)",
        "answer": "A",
        "id": "FOLIO_95"
    },
    {
        "context": "A man is either kind or evil.\nNo ugly person is handsome.\nAll evil people are ugly.\nAll gentlemen are handsome.\nAll CEOs are gentlemen.\nHarry is a gentleman.",
        "premises-FOL": "∀x (Kind(x) ⊕ Evil(x))\n∀x (Ugly(x) → ¬Handsome(x))\n∀x (Evil(x) → Ugly(x))\n∀x (Gentleman(x) → Handsome(x))\n∀x (CEO(x) → Gentleman(x))\nGentleman(harry)",
        "question": "Is the following statement true or false? If Harry is either both evil and ugly, or neither evil nor ugly, then Harry is neither kind nor a CEO.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "(Evil(harry) ∧ Ugly(harry)) ⊕ (¬Evil(harry) ∧ ¬Ugly(harry)) → ¬Kind(harry) ∧ ¬CEO(harry)",
        "answer": "B",
        "id": "FOLIO_96"
    },
    {
        "context": "If people are twins or triplets, then they spend a lot of time hanging out with and playing with their siblings.\nIf people have siblings who are the same age, then they are twins or triplets.\nIf people complain often about annoying siblings, then they have siblings who are the same age.\nIf people do not live at home regularly, then they do not develop strong bonds with their family members.\nIf people spend a lot of time hanging out with and playing with their siblings, then they often did not live at home regularly.\nLuke is either both a twin or triplet and develops strong bonds with his family members, or he neither is a twin or triplet nor develops strong bonds with his family members.   ",
        "premises-FOL": "∀x (TwinTriplet(x) → Playing(x))\n∀x (SameAge(x) → TwinTriplet(x))\n∀x (Complain(x) → SameAge(x))\n∀x (NotHome(x) → ¬StrongBonds(x))\n∀x (Playing(x) → NotHome(x))\n(TwinTriplet(luke) ∧ StrongBonds(luke)) ⊕ (¬TwinTriplet(luke) ∧ ¬StrongBonds(luke))",
        "question": "Is the following statement true or false? Luke complains often about annoying siblings.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "Complain(luke)",
        "answer": "B",
        "id": "FOLIO_98"
    },
    {
        "context": "If people are twins or triplets, then they spend a lot of time hanging out with and playing with their siblings.\nIf people have siblings who are the same age, then they are twins or triplets.\nIf people complain often about annoying siblings, then they have siblings who are the same age.\nIf people do not live at home regularly, then they do not develop strong bonds with their family members.\nIf people spend a lot of time hanging out with and playing with their siblings, then they often did not live at home regularly.\nLuke is either both a twin or triplet and develops strong bonds with his family members, or he neither is a twin or triplet nor develops strong bonds with his family members.   ",
        "premises-FOL": "∀x (TwinTriplet(x) → Playing(x))\n∀x (SameAge(x) → TwinTriplet(x))\n∀x (Complain(x) → SameAge(x))\n∀x (NotHome(x) → ¬StrongBonds(x))\n∀x (Playing(x) → NotHome(x))\n(TwinTriplet(luke) ∧ StrongBonds(luke)) ⊕ (¬TwinTriplet(luke) ∧ ¬StrongBonds(luke))",
        "question": "Is the following statement true or false? Luke is neither a twin nor triplet nor complains often about annoying siblings.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "¬(TwinTriplet(luke) ∨ Complain(luke))",
        "answer": "A",
        "id": "FOLIO_99"
    },
    {
        "context": "It costs US $205 to take the GRE test.\nETS provides financial aid to those GRE applicants who prove economic hardship.\nEconomic hardship refers to difficulty caused by having too little money or too few resources.\nTom lives in a single-parent family.\nHis dad has been out of work for more than a year.",
        "premises-FOL": "Cost205(gre)\n∀x (Cost205(x) → CostBelow300(x))\n∀x (Hardship(x) → FinancialAid(x))\n∀x (SingleParent(x) ∨ FewResources(x) → Hardship(x))\nSingleParent(tom)\nFewResources(tom)",
        "question": "Is the following statement true or false? Tom can apply for financial aid from ETS to take the GRE test.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "FinancialAid(tom)",
        "answer": "A",
        "id": "FOLIO_100"
    },
    {
        "context": "It costs US $205 to take the GRE test.\nETS provides financial aid to those GRE applicants who prove economic hardship.\nEconomic hardship refers to difficulty caused by having too little money or too few resources.\nTom lives in a single-parent family.\nHis dad has been out of work for more than a year.",
        "premises-FOL": "Cost205(gre)\n∀x (Cost205(x) → CostBelow300(x))\n∀x (Hardship(x) → FinancialAid(x))\n∀x (SingleParent(x) ∨ FewResources(x) → Hardship(x))\nSingleParent(tom)\nFewResources(tom)",
        "question": "Is the following statement true or false? It cost below US $300 to take the GRE test.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "CostBelow300(gre)",
        "answer": "A",
        "id": "FOLIO_101"
    },
    {
        "context": "It costs US $205 to take the GRE test.\nETS provides financial aid to those GRE applicants who prove economic hardship.\nEconomic hardship refers to difficulty caused by having too little money or too few resources.\nTom lives in a single-parent family.\nHis dad has been out of work for more than a year.",
        "premises-FOL": "Cost205(gre)\n∀x (Cost205(x) → CostBelow300(x))\n∀x (Hardship(x) → FinancialAid(x))\n∀x (SingleParent(x) ∨ FewResources(x) → Hardship(x))\nSingleParent(tom)\nFewResources(tom)",
        "question": "Is the following statement true or false? There is no financial aid available for the GRE test.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "¬(∃x (FinancialAid(x)))",
        "answer": "B",
        "id": "FOLIO_102"
    },
    {
        "context": "If people spill a lot of food on their clothing, then they do not tidy their spaces consistently and enjoy the process of cleaning.\nAll foodies who go out frequently to find new food restaurants to try are people who spill a lot of food on their clothing.\nIf people grew up as only children with no siblings, then they tidy their spaces consistently and enjoy the process of cleaning.\nIf people have parents who are very busy with their regular jobs, then they grew up as only children with no siblings.\nAll households with a high net income have people who have parents who are very busy with their regular jobs.\nPeter is either both a person who spills a lot of food on his clothing and grew up as an only child with no siblings, or he is neither a person who spills a lot of food on his clothing nor grew up as an only child with no siblings. ",
        "premises-FOL": "∀x (Spill(x) → ¬Tidy(x))\n∀x (Foodie(x) → Spill(x))\n∀x (OnlyChild(x) → Tidy(x))\n∀x (BusyParents(x) → OnlyChild(x))\n∀x (HighIncome(x) → BusyParents(x))\n(Spill(peter) ∧ OnlyChild(peter)) ∨ ¬Spill(peter) ∧ ¬OnlyChild(peter))",
        "question": "Is the following statement true or false? Peter is either a foodie who goes out frequently to find new food restaurants to try or belongs to a household with a high net income.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "Foodie(peter) ∨ HighIncome(peter)",
        "answer": "B",
        "id": "FOLIO_104"
    },
    {
        "context": "If people spill a lot of food on their clothing, then they do not tidy their spaces consistently and enjoy the process of cleaning.\nAll foodies who go out frequently to find new food restaurants to try are people who spill a lot of food on their clothing.\nIf people grew up as only children with no siblings, then they tidy their spaces consistently and enjoy the process of cleaning.\nIf people have parents who are very busy with their regular jobs, then they grew up as only children with no siblings.\nAll households with a high net income have people who have parents who are very busy with their regular jobs.\nPeter is either both a person who spills a lot of food on his clothing and grew up as an only child with no siblings, or he is neither a person who spills a lot of food on his clothing nor grew up as an only child with no siblings. ",
        "premises-FOL": "∀x (Spill(x) → ¬Tidy(x))\n∀x (Foodie(x) → Spill(x))\n∀x (OnlyChild(x) → Tidy(x))\n∀x (BusyParents(x) → OnlyChild(x))\n∀x (HighIncome(x) → BusyParents(x))\n(Spill(peter) ∧ OnlyChild(peter)) ∨ ¬Spill(peter) ∧ ¬OnlyChild(peter))",
        "question": "Is the following statement true or false? Peter is either a foodie who goes out frequently to find new food restaurants to try and belong to a household with a high net income or he is a foodie who goes out frequently to find new food restaurants to try nor belongs to a household with a high net income.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "(Foodie(peter) ∧ HighIncome(peter)) ∨ ¬Foodie(peter) ∧ ¬HighIncome(peter))",
        "answer": "A",
        "id": "FOLIO_105"
    },
    {
        "context": "The Picuris Mountains are a mountain range in New Mexico or Texas.\nJuan de Onate visited the Picuris Mountains.\nThe Harding Pegmatite Mine, located in the Picuris Mountains, was donated.\nThere are no mountain ranges in texas that have mines which have been donated.",
        "premises-FOL": "MountainRange(picurismountains) ∧ In(picurismountains, newmexico) ∨ In(picurismountains, texas)\nVisited(juandeonate, picurismountains)\nIn(hardingpegmatitemine, picurismountains) ∧ Mine(hardingpegmatitemine) ∧ Donated(hardingpegmatitemine)\n∀x ∀y (Mine(x) ∧ Donated(x) ∧ In(x, y) ∧ MountainRange(y) → ¬In(y, texas))",
        "question": "Is the following statement true or false? Juan de Onate visited a mountain range in New Mexico.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "∃x (Visited(juandeonate, x) ∧ MountainRange(x) ∧ In(x, newmexico))",
        "answer": "A",
        "id": "FOLIO_107"
    },
    {
        "context": "The Picuris Mountains are a mountain range in New Mexico or Texas.\nJuan de Onate visited the Picuris Mountains.\nThe Harding Pegmatite Mine, located in the Picuris Mountains, was donated.\nThere are no mountain ranges in texas that have mines which have been donated.",
        "premises-FOL": "MountainRange(picurismountains) ∧ In(picurismountains, newmexico) ∨ In(picurismountains, texas)\nVisited(juandeonate, picurismountains)\nIn(hardingpegmatitemine, picurismountains) ∧ Mine(hardingpegmatitemine) ∧ Donated(hardingpegmatitemine)\n∀x ∀y (Mine(x) ∧ Donated(x) ∧ In(x, y) ∧ MountainRange(y) → ¬In(y, texas))",
        "question": "Is the following statement true or false? The Harding Pegmatite Mine is not located in a mountain range in New Mexico.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "∀x (MountainRange(x) ∧ In(hardingpegmatitemine, x) → ¬In(x, newmexico))",
        "answer": "B",
        "id": "FOLIO_109"
    },
    {
        "context": "If a man is taller than another man, the taller one can block the other's shooting.\nMichael is a man who is taller than everyone else in his class.\nIf person x is taller than person y, and person y is taller than person z, than x is taller than z\nPeter is a man who is taller than Michael.\nMichael can block any shooting from a person as long as the person does not jump when shooting.\nMichael cannot block Windy's shooting.\nEvery shooter who can jump when shooting is a great shooter.",
        "premises-FOL": "∀x ∀y (IsMan(x) ∧ IsMan(y) ∧ Taller(x, y) → CanBlock(x, y))\n∀x (IsMan(x) ∧ SameClass(x, michael) ∧ ¬Be(x, michael) → Taller(michael, x))\n∀x ∀y ∀z ((Taller(x, y) ∧ Taller(y, z)) → Taller(x, z))\nIsMan(peter) ∧ Taller(peter, michael)\n∀x (¬JumpWhenShooting(x) → CanBlock(michael, x))\n¬CanBlock(michael, windy)\n∀x (JumpWhenShooting(x) → GreatShooter(x))",
        "question": "Is the following statement true or false? Peter is shorter than a man in Michael's class.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "∃x (IsMan(x) ∧ SameClass(x, michael) ∧ ¬Be(x, michael) ∧ ¬Taller(peter, x))",
        "answer": "B",
        "id": "FOLIO_110"
    },
    {
        "context": "If a man is taller than another man, the taller one can block the other's shooting.\nMichael is a man who is taller than everyone else in his class.\nIf person x is taller than person y, and person y is taller than person z, than x is taller than z\nPeter is a man who is taller than Michael.\nMichael can block any shooting from a person as long as the person does not jump when shooting.\nMichael cannot block Windy's shooting.\nEvery shooter who can jump when shooting is a great shooter.",
        "premises-FOL": "∀x ∀y (IsMan(x) ∧ IsMan(y) ∧ Taller(x, y) → CanBlock(x, y))\n∀x (IsMan(x) ∧ SameClass(x, michael) ∧ ¬Be(x, michael) → Taller(michael, x))\n∀x ∀y ∀z ((Taller(x, y) ∧ Taller(y, z)) → Taller(x, z))\nIsMan(peter) ∧ Taller(peter, michael)\n∀x (¬JumpWhenShooting(x) → CanBlock(michael, x))\n¬CanBlock(michael, windy)\n∀x (JumpWhenShooting(x) → GreatShooter(x))",
        "question": "Is the following statement true or false? Windy is a great shooter.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "GreatShooter(windy)",
        "answer": "A",
        "id": "FOLIO_111"
    },
    {
        "context": "Barutin Cove is named after the Bulgarian settlement of Barutin.\nBarutin Cove is on the southwest coast of Snow Island.\nThe South Shetland Islands include Snow Island, Greenwich Island, and Deception Island.\nThe South Shetland Islands are considered part of Antarctica.\nIf A is located in B and B is located in C, then A is located in C.",
        "premises-FOL": "Cove(barutin) ∧ NameAfter(barutin, settlement) ∧ Locate(settlement, bulgaria)\nLocate(barutin, snow)\nLocate(snow, shetland) ∧ Locate(greenwich, shetland) ∧ Locate(deception, shetland)\nLocate(shetland, antarctica)\n∀x ∀y ∀z ((Locate(x, y) ∧ Locate(y, z)) → Locate(x, z))",
        "question": "Is the following statement true or false? There is at least one cove in Antarctica named after a place in Bulgaria.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "∃x ∃y (Cove(x) ∧ NameAfter(x, y) ∧ Locate(y, bulgaria))",
        "answer": "A",
        "id": "FOLIO_114"
    },
    {
        "context": "Barutin Cove is named after the Bulgarian settlement of Barutin.\nBarutin Cove is on the southwest coast of Snow Island.\nThe South Shetland Islands include Snow Island, Greenwich Island, and Deception Island.\nThe South Shetland Islands are considered part of Antarctica.\nIf A is located in B and B is located in C, then A is located in C.",
        "premises-FOL": "Cove(barutin) ∧ NameAfter(barutin, settlement) ∧ Locate(settlement, bulgaria)\nLocate(barutin, snow)\nLocate(snow, shetland) ∧ Locate(greenwich, shetland) ∧ Locate(deception, shetland)\nLocate(shetland, antarctica)\n∀x ∀y ∀z ((Locate(x, y) ∧ Locate(y, z)) → Locate(x, z))",
        "question": "Is the following statement true or false? Barutin is not located in Antarctica.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "¬Locate(barutin, antarctica)",
        "answer": "B",
        "id": "FOLIO_115"
    },
    {
        "context": "If something can transport multiple passengers, then they are not empty.\nAll airlines can transport multiple passengers.\nAll planes are empty.\nAll Boeing 707s are planes.\nIf Greyhound is not an airline, then there are no Greyhound planes.",
        "premises-FOL": "∀x (TransportMultiplePassengers(x) → ¬Empty(x))\n∀x (Airline(x) → TransportMultiplePassengers(x))\n∀x (Plane(x) → Empty(x))\n∀x (Boeing707(x) → Plane(x))\n¬Airline(greyhound) → ¬(Airline(greyhound) ∨ Plane(greyhound))",
        "question": "Is the following statement true or false? A Greyhound is a Boeing 707.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "Boeing707(greyhound)",
        "answer": "B",
        "id": "FOLIO_118"
    },
    {
        "context": "If something can transport multiple passengers, then they are not empty.\nAll airlines can transport multiple passengers.\nAll planes are empty.\nAll Boeing 707s are planes.\nIf Greyhound is not an airline, then there are no Greyhound planes.",
        "premises-FOL": "∀x (TransportMultiplePassengers(x) → ¬Empty(x))\n∀x (Airline(x) → TransportMultiplePassengers(x))\n∀x (Plane(x) → Empty(x))\n∀x (Boeing707(x) → Plane(x))\n¬Airline(greyhound) → ¬(Airline(greyhound) ∨ Plane(greyhound))",
        "question": "Is the following statement true or false? A Greyhound is not a Boeing 707.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "¬Boeing707(greyhound)",
        "answer": "A",
        "id": "FOLIO_119"
    },
    {
        "context": "All people who have a wedding are people who have at least one child.\nAll people who travel to Paris for their honeymoon are people who have a wedding.\nAll weddings that occur in July belong to people who travel to Paris for their honeymoon.\nSome weddings in July are well-attended.\nIf John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding.\nIf John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon. ",
        "premises-FOL": "∀x (Wedding(x) → Child(x))\n∀x (Paris(x) → Wedding(x))\n∀x (July(x) → Paris(x))\n∃x (July(x) ∧ WellAttended(x))\nChild(john) → ¬(Paris(john) ∧ Wedding(john))\nWellAttended(john) → July(john) ⊕ Paris(john)",
        "question": "Is the following statement true or false? John has a wedding that is well-attended.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "WellAttended(john)",
        "answer": "B",
        "id": "FOLIO_123"
    },
    {
        "context": "All people who have a wedding are people who have at least one child.\nAll people who travel to Paris for their honeymoon are people who have a wedding.\nAll weddings that occur in July belong to people who travel to Paris for their honeymoon.\nSome weddings in July are well-attended.\nIf John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding.\nIf John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon. ",
        "premises-FOL": "∀x (Wedding(x) → Child(x))\n∀x (Paris(x) → Wedding(x))\n∀x (July(x) → Paris(x))\n∃x (July(x) ∧ WellAttended(x))\nChild(john) → ¬(Paris(john) ∧ Wedding(john))\nWellAttended(john) → July(john) ⊕ Paris(john)",
        "question": "Is the following statement true or false? John does not have a wedding that is well-attended.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "¬WellAttended(john)",
        "answer": "A",
        "id": "FOLIO_124"
    },
    {
        "context": "All people who have a wedding are people who have at least one child.\nAll people who travel to Paris for their honeymoon are people who have a wedding.\nAll weddings that occur in July belong to people who travel to Paris for their honeymoon.\nSome weddings in July are well-attended.\nIf John has at least one child, then John does not travel to Paris for his honeymoon and does not have a wedding.\nIf John has a wedding that is well-attended, then John has a wedding in July or, if not, then John travels to Paris for their honeymoon. ",
        "premises-FOL": "∀x (Wedding(x) → Child(x))\n∀x (Paris(x) → Wedding(x))\n∀x (July(x) → Paris(x))\n∃x (July(x) ∧ WellAttended(x))\nChild(john) → ¬(Paris(john) ∧ Wedding(john))\nWellAttended(john) → July(john) ⊕ Paris(john)",
        "question": "Is the following statement true or false? John has neither a wedding that is well-attended nor does he travel to Paris for his honeymoon.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "¬(WellAttended(john) ∨ July(john))",
        "answer": "A",
        "id": "FOLIO_126"
    },
    {
        "context": "[BG] Some mammals have teeth.\nPlatypus have no teeth.\nPlatypus are mammals. \nHumans have teeth.",
        "premises-FOL": "∃x (Mammal(x) ∧ Have(x, teeth))\n¬Have(platypus, teeth)\nMammal(platypus)\nHave(humans, teeth)",
        "question": "Is the following statement true or false? Platypus are mammals with no teeth.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "Mammal(platypus) ∧ ¬Have(platypus, teeth)",
        "answer": "A",
        "id": "FOLIO_127"
    },
    {
        "context": "Plungers suck.\nVacuums suck.\nVampires suck.\nSpace is a vacuum.\nA duster is a household appliance that doesn't suck.",
        "premises-FOL": "∀x (Plunger(x) → Suck(x))\n∀x (Vacuum(x) → Suck(x))\n∀x (Vampire(x) → Suck(x))\nVacuum(space)\nHouseHoldApp(duster) ∧ ¬ Suck(duster)",
        "question": "Is the following statement true or false? Space sucks.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "Suck(space)",
        "answer": "A",
        "id": "FOLIO_130"
    },
    {
        "context": "Plungers suck.\nVacuums suck.\nVampires suck.\nSpace is a vacuum.\nA duster is a household appliance that doesn't suck.",
        "premises-FOL": "∀x (Plunger(x) → Suck(x))\n∀x (Vacuum(x) → Suck(x))\n∀x (Vampire(x) → Suck(x))\nVacuum(space)\nHouseHoldApp(duster) ∧ ¬ Suck(duster)",
        "question": "Is the following statement true or false? If something is a household appliance, it sucks.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "∀x (HouseHoldApp(x) → Suck(x))",
        "answer": "B",
        "id": "FOLIO_132"
    },
    {
        "context": "Machine Learning algorithms can be categorized as supervised learning, unsupervised learning, and reinforcement learning.\nUnsupervised learning doesn't require labelled data.\nThe state-of-the-art text summarization model is trained with machine learning algorithms.\nReinforcement learning is not used to train the state-of-the-art text summarization model.\nThe Machine Learning algorithm for training text summarization model requires labelled data.",
        "premises-FOL": "MLAlgorithm(supervisedLearning) ∨ MLAlgorithm(unsupervisedLearning) ∨ MLAlgorithm(reinforcementLearning)\n¬RequireLabelledData(unsupervisedLearning)\nTrainTextSumModel(supervisedLearning) ∨ TrainTextSumModel(unsupervisedLearning) ∨ TrainTextSumModel(reinforcementLearning)\n¬TrainTextSumModel(reinforcementLearning)\n∀x ((MLAlgorithm(x) ∧ TrainTextSumModel(x)) → RequireLabelledData(x))",
        "question": "Is the following statement true or false? Supervised learning is used to train the state-of-the-art text summarization model.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "TrainTextSumModel(supervisedLearning)",
        "answer": "A",
        "id": "FOLIO_133"
    },
    {
        "context": "Machine Learning algorithms can be categorized as supervised learning, unsupervised learning, and reinforcement learning.\nUnsupervised learning doesn't require labelled data.\nThe state-of-the-art text summarization model is trained with machine learning algorithms.\nReinforcement learning is not used to train the state-of-the-art text summarization model.\nThe Machine Learning algorithm for training text summarization model requires labelled data.",
        "premises-FOL": "MLAlgorithm(supervisedLearning) ∨ MLAlgorithm(unsupervisedLearning) ∨ MLAlgorithm(reinforcementLearning)\n¬RequireLabelledData(unsupervisedLearning)\nTrainTextSumModel(supervisedLearning) ∨ TrainTextSumModel(unsupervisedLearning) ∨ TrainTextSumModel(reinforcementLearning)\n¬TrainTextSumModel(reinforcementLearning)\n∀x ((MLAlgorithm(x) ∧ TrainTextSumModel(x)) → RequireLabelledData(x))",
        "question": "Is the following statement true or false? Unsupervised learning is used to train the state-of-the-art text summarization model.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "TrainTextSumModel(unsupervisedLearning)",
        "answer": "B",
        "id": "FOLIO_134"
    },
    {
        "context": "If a cartoon character is funny, then it is popular.\nIf a cartoon character is ugly, then it is not popular.\nIf a cartoon character is loved by children, then it is funny.\nIf a cartoon character is from The Simpsons, then it is loved by children.\nIf a cartoon character is yellow, then it is from The Simpsons.\nBen is either from The Simpsons or funny.",
        "premises-FOL": "∀x (Funny(x) → Popular(x))\n∀x (Ugly(x) → ¬Popular(x))\n∀x (Love(children, x) → Funny(x))\n∀x (Simpsons(x) → Love(children, x))\n∀x (Yellow(x) → Simpsons(x))\nSimpsons(ben) ⊕ Funny(ben)",
        "question": "Is the following statement true or false? Ben is ugly or yellow.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "Ugly(ben) ∨ Yellow(ben)",
        "answer": "B",
        "id": "FOLIO_136"
    },
    {
        "context": "If a cartoon character is funny, then it is popular.\nIf a cartoon character is ugly, then it is not popular.\nIf a cartoon character is loved by children, then it is funny.\nIf a cartoon character is from The Simpsons, then it is loved by children.\nIf a cartoon character is yellow, then it is from The Simpsons.\nBen is either from The Simpsons or funny.",
        "premises-FOL": "∀x (Funny(x) → Popular(x))\n∀x (Ugly(x) → ¬Popular(x))\n∀x (Love(children, x) → Funny(x))\n∀x (Simpsons(x) → Love(children, x))\n∀x (Yellow(x) → Simpsons(x))\nSimpsons(ben) ⊕ Funny(ben)",
        "question": "Is the following statement true or false? Ben is either yellow and ugly or neither yellow nor ugly.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "(Yellow(ben) ∧ Ugly(ben)) ⊕ (¬Yellow(ben) ∧ ¬Ugly(ben))",
        "answer": "A",
        "id": "FOLIO_137"
    },
    {
        "context": "Breeding back is a form of artificial selection by the deliberate selective breeding of domestic animals.\nHeck cattle were bred-back in the 1920s to resemble the aurochs.\n[BG] Heck cattle are animals.\n[BG] Aurochs are animals.\nSome animals to be bred-back resemble animals that are extinct.",
        "premises-FOL": "∀x ∀y (BreedingBack(x, y) → ArtificiallySelect(x))\n∃x ∃y (HeckCattle(x) ∧ Aurochs(y) ∧ BreedingBack(x, y))\n∀x (HeckCattle(x) → Animal(x))\n∀x (Aurochs(x) → Animal(x))\n∃x ∃y (Animal(x) ∧ Animal(y) ∧ BreedingBack(x, y) ∧ Extinct(y))",
        "question": "Is the following statement true or false? Some Heck cattle are artificially selected.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "∃x (HeckCattle(x) ∧ ArtificiallySelect(x))",
        "answer": "A",
        "id": "FOLIO_138"
    },
    {
        "context": "All students are humans. \nIf someone studies, then they are a student.\nA person either studys or teaches.\nNo young person teaches.\nJerry neither teaches nor is a manager.\nRose is young or a student.",
        "premises-FOL": "∀x (Student(x) → Human(x))\n∀x (Study(x) → Student(x))\n∀x (Study(x) ∨ Teach(x))\n∀x (Young(x) → ¬Teach(x))\n¬Teach(jerry) ∧ ¬Manager(jerry)\nYoung(rose) ∨ Student(rose)",
        "question": "Is the following statement true or false? Rose is a human or a manager.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "Human(rose) ∨ Manager(rose)",
        "answer": "A",
        "id": "FOLIO_142"
    },
    {
        "context": "All students are humans. \nIf someone studies, then they are a student.\nA person either studys or teaches.\nNo young person teaches.\nJerry neither teaches nor is a manager.\nRose is young or a student.",
        "premises-FOL": "∀x (Student(x) → Human(x))\n∀x (Study(x) → Student(x))\n∀x (Study(x) ∨ Teach(x))\n∀x (Young(x) → ¬Teach(x))\n¬Teach(jerry) ∧ ¬Manager(jerry)\nYoung(rose) ∨ Student(rose)",
        "question": "Is the following statement true or false? Rose is a human or Jerry is a manager.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "Human(rose) ∨ Manager(jerry)",
        "answer": "A",
        "id": "FOLIO_143"
    },
    {
        "context": "All students are humans. \nIf someone studies, then they are a student.\nA person either studys or teaches.\nNo young person teaches.\nJerry neither teaches nor is a manager.\nRose is young or a student.",
        "premises-FOL": "∀x (Student(x) → Human(x))\n∀x (Study(x) → Student(x))\n∀x (Study(x) ∨ Teach(x))\n∀x (Young(x) → ¬Teach(x))\n¬Teach(jerry) ∧ ¬Manager(jerry)\nYoung(rose) ∨ Student(rose)",
        "question": "Is the following statement true or false? It is not true that Rose is a student and Jerry is a human.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "¬(Student(rose) ∧ Human(jerry))",
        "answer": "B",
        "id": "FOLIO_144"
    },
    {
        "context": "New Vessel Press is a publishing house which specializes in translating foreign literature into English.\nAll of New Vessel Press's published books are in English.\nNeapolitan Chronicles is a book published by New Vessel Press.\nNeapolitan Chronicles was translated from Italian.\nPalace of Flies is a book published by New Vessel Press.",
        "premises-FOL": "PublishingHouse(newvesselpress) ∧ SpecializesIn(newvessel, translatingforeignliteratureintoenglish)\n∀x (Book(x) ∧ PublishedBy(x, newvesselpress) → In(x, english))\nBook(neapolitanchronicles) ∧ PublishedBy(neapolitanchronicles, newvesselpress)\nTranslatedFrom(neapolitanchronicles, italian)\nBook(palaceofflies) ∧ PublishedBy(palaceofflies, newvesselpress)",
        "question": "Is the following statement true or false? Neapolitan Chronicles is an English book.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "Book(neapolitanchronicles) ∧ In(neapolitanchronicles, english)",
        "answer": "A",
        "id": "FOLIO_145"
    },
    {
        "context": "If people own a large desktop monitor at their home, then they work regularly and often at home.\nAll people who have a fully stocked and impressive home office are people who own a large desktop monitor at their home.\nAll people who work regularly and often at home spend their free time tidying and organizing the spaces in their homes.\nAll people who work regularly and often at home visit the office supply store regularly.\nIf people spend their free time tidying and organizing the spaces in their home, then they do not go to bed late and wake up every day after noon. \nRemy either both goes to bed late and wakes up every day after noon and spends their free time tidying and organizing the spaces in their home, or they do not go to bed late and wake up every day after noon nor spend their free time tidying and organizing the spaces in their home. ",
        "premises-FOL": "∀x (Desktop(x) → WorkHome(x))\n∀x (HomeOffice(x) → Desktop(x))\n∀x (WorkHome(x) → Tidying(x))\n∀x (WorkHome(x) → OfficeStore(x))\n∀x (Tidying(x) → ¬Late(x))\n(Late(remy) ∧ Tidying(remy)) ⊕ (¬Late(remy) ∧ ¬Tidying(remy))",
        "question": "Is the following statement true or false? Remy has a fully stocked and impressive home office and also visits the office supply store regularly.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "HomeOffice(remy) ∧ OfficeStore(remy)",
        "answer": "B",
        "id": "FOLIO_149"
    },
    {
        "context": "If people own a large desktop monitor at their home, then they work regularly and often at home.\nAll people who have a fully stocked and impressive home office are people who own a large desktop monitor at their home.\nAll people who work regularly and often at home spend their free time tidying and organizing the spaces in their homes.\nAll people who work regularly and often at home visit the office supply store regularly.\nIf people spend their free time tidying and organizing the spaces in their home, then they do not go to bed late and wake up every day after noon. \nRemy either both goes to bed late and wakes up every day after noon and spends their free time tidying and organizing the spaces in their home, or they do not go to bed late and wake up every day after noon nor spend their free time tidying and organizing the spaces in their home. ",
        "premises-FOL": "∀x (Desktop(x) → WorkHome(x))\n∀x (HomeOffice(x) → Desktop(x))\n∀x (WorkHome(x) → Tidying(x))\n∀x (WorkHome(x) → OfficeStore(x))\n∀x (Tidying(x) → ¬Late(x))\n(Late(remy) ∧ Tidying(remy)) ⊕ (¬Late(remy) ∧ ¬Tidying(remy))",
        "question": "Is the following statement true or false? If Remy either goes to bed late and wakes up every day after noon or visits the office supply store regularly, then Remy neither spends their free time tidying and organizing the spaces in their home nor has a fully stocked and impressive home office.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "Late(remy) ∨ OfficeStore(remy) → ¬(Tidying(remy) ∨ HomeOffice(remy))",
        "answer": "A",
        "id": "FOLIO_150"
    },
    {
        "context": "No students who work in the library are from the computer science department. \nAll students who have part-time jobs offered by the university are students who work in the library. \nAll students who take the database course are from the computer science department. \nAll students instructed by professor David are taking the database course. \nAll students working in the lab are instructed by professor David. \nJames is a student working in the lab. \nJack neither has a part-time job offered by the university nor works in the lab. ",
        "premises-FOL": "∀x (WorkLibrary(x) → ¬ComputerScience(x))\n∀x (PartTime(x) → WorkLibrary(x))\n∀x (Database(x) → ComputerScience(x))\n∀x (ProfessorDavid(x) → Database(x))\n∀x (WorkInLab(x) → ProfessorDavid(x))\nWorkInLab(james)\n¬PartTime(jack) ∧ ¬WorkInLab(jack)",
        "question": "Is the following statement true or false? James has a part-time job offered by the university.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "PartTime(james)",
        "answer": "B",
        "id": "FOLIO_152"
    },
    {
        "context": "No students who work in the library are from the computer science department. \nAll students who have part-time jobs offered by the university are students who work in the library. \nAll students who take the database course are from the computer science department. \nAll students instructed by professor David are taking the database course. \nAll students working in the lab are instructed by professor David. \nJames is a student working in the lab. \nJack neither has a part-time job offered by the university nor works in the lab. ",
        "premises-FOL": "∀x (WorkLibrary(x) → ¬ComputerScience(x))\n∀x (PartTime(x) → WorkLibrary(x))\n∀x (Database(x) → ComputerScience(x))\n∀x (ProfessorDavid(x) → Database(x))\n∀x (WorkInLab(x) → ProfessorDavid(x))\nWorkInLab(james)\n¬PartTime(jack) ∧ ¬WorkInLab(jack)",
        "question": "Is the following statement true or false? James does not have a part-time job offered by the university.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "¬PartTime(james)",
        "answer": "A",
        "id": "FOLIO_153"
    },
    {
        "context": "No students who work in the library are from the computer science department. \nAll students who have part-time jobs offered by the university are students who work in the library. \nAll students who take the database course are from the computer science department. \nAll students instructed by professor David are taking the database course. \nAll students working in the lab are instructed by professor David. \nJames is a student working in the lab. \nJack neither has a part-time job offered by the university nor works in the lab. ",
        "premises-FOL": "∀x (WorkLibrary(x) → ¬ComputerScience(x))\n∀x (PartTime(x) → WorkLibrary(x))\n∀x (Database(x) → ComputerScience(x))\n∀x (ProfessorDavid(x) → Database(x))\n∀x (WorkInLab(x) → ProfessorDavid(x))\nWorkInLab(james)\n¬PartTime(jack) ∧ ¬WorkInLab(jack)",
        "question": "Is the following statement true or false? James either takes the database course or has a part-time job offered by the university.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "Database(james) ⊕ PartTime(james)",
        "answer": "A",
        "id": "FOLIO_154"
    },
    {
        "context": "If George likes music, he wants to compose.\nIf George has access to a program, he can compose.\nIf George can compose and wants to compose, he will compose.",
        "premises-FOL": "LikesMusic(george) → WantsToCompose(george)\nAccesstoProgram(george) → CanCompose(george)\n(WantsToCompose(george) ∧ CanCompose(george)) → WillCompose(george)",
        "question": "Is the following statement true or false? If George likes music and has access to a program, he will compose.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "(LikesMusic(george) ∧ AccesstoProgram(george)) → WillCompose(george)",
        "answer": "A",
        "id": "FOLIO_156"
    },
    {
        "context": "A hawk never lands. \nSome birds are hawks.",
        "premises-FOL": "∀x (Hawk(x) → ¬Lands(x))\n∃x (Bird(x) ∧ Hawk(x))",
        "question": "Is the following statement true or false? All birds land",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "∀x (Bird(x) → Lands(x))",
        "answer": "B",
        "id": "FOLIO_158"
    },
    {
        "context": "On some Mondays at 8 pm, roses are given out on TV.\nEvery rose given out on TV is on the Bachelor.\nEverything on the Bachelor portrays the lives of real people.\nAll shows portraying the lives of real people are reality TV shows.\nBreaking Bad is not a reality TV show.",
        "premises-FOL": "∃x (Mondayat8(x) ∧ RoseGivenOutOnTv(x))\n∀x (RoseGivenOutOnTv(x) → OnBachelor(x))\n∀x (OnBachelor(x) → PortrayLiveOfRealPeople(x))\n∀x (PortrayLiveOfRealPeople(x) → RealityTVShow(x))\n¬RealityTVShow(breakingbad)",
        "question": "Is the following statement true or false? Breaking Bad is a TV show in which roses are given out on Monday at 8 pm.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "Mondayat8(breakingbad) ∧ RoseGivenOutOnTv(breakingbad)",
        "answer": "B",
        "id": "FOLIO_160"
    },
    {
        "context": "On some Mondays at 8 pm, roses are given out on TV.\nEvery rose given out on TV is on the Bachelor.\nEverything on the Bachelor portrays the lives of real people.\nAll shows portraying the lives of real people are reality TV shows.\nBreaking Bad is not a reality TV show.",
        "premises-FOL": "∃x (Mondayat8(x) ∧ RoseGivenOutOnTv(x))\n∀x (RoseGivenOutOnTv(x) → OnBachelor(x))\n∀x (OnBachelor(x) → PortrayLiveOfRealPeople(x))\n∀x (PortrayLiveOfRealPeople(x) → RealityTVShow(x))\n¬RealityTVShow(breakingbad)",
        "question": "Is the following statement true or false? If roses are given out during Breaking Bad, then it is on Monday at 8 pm.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "RoseGivenOutOnTv(breakingbad) → Mondayat8(breakingbad)",
        "answer": "A",
        "id": "FOLIO_161"
    },
    {
        "context": "Heinrich Scmidt was a Nazi German politician. \nHeeinrich Scmidt was also a member of the Prussian State Parliament and the Nazi Reichstag.",
        "premises-FOL": "From(heinrichScmidt, naziGermany) ∧ Politician(heinrichScmidt)\nMember(heinrichScmidt, prussianStateParliament) ∧ Member(heinrichScmidt, naziReichstag)",
        "question": "Is the following statement true or false? Heinrich Schmidt was either German or Russian.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "From(heinrichScmidt, naziGermany) ∨ From(heinrichScmidt, russia)",
        "answer": "A",
        "id": "FOLIO_162"
    },
    {
        "context": "Heinrich Scmidt was a Nazi German politician. \nHeeinrich Scmidt was also a member of the Prussian State Parliament and the Nazi Reichstag.",
        "premises-FOL": "From(heinrichScmidt, naziGermany) ∧ Politician(heinrichScmidt)\nMember(heinrichScmidt, prussianStateParliament) ∧ Member(heinrichScmidt, naziReichstag)",
        "question": "Is the following statement true or false? Some Nazi German politician was part of both the Prussian State Parliament and the Nazi Reichstag.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "∃x (From(x, naziGermany) ∧ Politician(x) ∧ Member(x, prussianStateParliament) ∧ Member(x, naziReichstag))",
        "answer": "A",
        "id": "FOLIO_163"
    },
    {
        "context": "Heinrich Scmidt was a Nazi German politician. \nHeeinrich Scmidt was also a member of the Prussian State Parliament and the Nazi Reichstag.",
        "premises-FOL": "From(heinrichScmidt, naziGermany) ∧ Politician(heinrichScmidt)\nMember(heinrichScmidt, prussianStateParliament) ∧ Member(heinrichScmidt, naziReichstag)",
        "question": "Is the following statement true or false? No politicans are part of the Nazi Reichstag.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "∀x (Politician(x) → ¬Member(x, naziReichstag))",
        "answer": "B",
        "id": "FOLIO_164"
    },
    {
        "context": "If something is a deadly disease, then its survival rate is low. \nAll severe cancers are deadly diseases.\nBile duct cancer is a severe cancer. \nAll Cholangiocarcinoma is bile duct cancer.\nNo one with mild flu has a low survival rate.\nIf colorectal cancer is a bile duct cancer and the survival rate is low, then colorectal cancer is not a bile duct cancer.",
        "premises-FOL": "∀x (DeadlyDiseases(x) → SurvivalRateIsLow(x))\n∀x (SevereCancer(x) → DeadlyDiseases(x))\n∀x (BileDuctCancer(x) → SevereCancer(x))\n∀x (Cholangiocarcinoma(x) → BileDuctCancer(x))\n∀x (MildFlu(x) → ¬SurvivalRateIsLow(x)) \nBileDuctCancer(colorectalCancer) ∨ SurvivalRateIsLow(colorectalCancer) → ¬BileDuctCancer(colorectalCancer)",
        "question": "Is the following statement true or false? If colorectal cancer is a bile duct cancer or a Cholangiocarcinoma, then colorectal cancer is a bile duct cancer and a mild flu.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "BileDuctCancer(colorectalCancer) ∨ Cholangiocarcinoma(colorectalCancer) → BileDuctCancer(colorectalCancer) ∧ MildFlu(colorectalCancer)",
        "answer": "A",
        "id": "FOLIO_166"
    },
    {
        "context": "If something is a deadly disease, then its survival rate is low. \nAll severe cancers are deadly diseases.\nBile duct cancer is a severe cancer. \nAll Cholangiocarcinoma is bile duct cancer.\nNo one with mild flu has a low survival rate.\nIf colorectal cancer is a bile duct cancer and the survival rate is low, then colorectal cancer is not a bile duct cancer.",
        "premises-FOL": "∀x (DeadlyDiseases(x) → SurvivalRateIsLow(x))\n∀x (SevereCancer(x) → DeadlyDiseases(x))\n∀x (BileDuctCancer(x) → SevereCancer(x))\n∀x (Cholangiocarcinoma(x) → BileDuctCancer(x))\n∀x (MildFlu(x) → ¬SurvivalRateIsLow(x)) \nBileDuctCancer(colorectalCancer) ∨ SurvivalRateIsLow(colorectalCancer) → ¬BileDuctCancer(colorectalCancer)",
        "question": "Is the following statement true or false? If colorectal cancer is not a mild flu and a Cholangiocarcinoma, then colorectal cancer is a bile duct cancer or a Cholangiocarcinoma.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "¬MildFlu(colorectalCancer) ∨ ¬Cholangiocarcinoma(colorectalCancer) → BileDuctCancer(colorectalCancer) ∨ Cholangiocarcinoma(colorectalCancer)",
        "answer": "B",
        "id": "FOLIO_167"
    },
    {
        "context": "All people who eat salads regularly are very conscious about their health and eating habits.\nAll people who grew up in health-conscious childhood homes eat salads regularly.\nAll people who fulfill their nutritional daily intakes grew up in health-conscious childhood homes.\nIf people have good relationships with their parents, then they fulfill their nutritional daily intakes.\nIf people have good relationships with their parents, then they do not eat salads regularly.\nIf people visit the gym at least once a day, then they always fulfill their daily nutritional intakes.\nIt is either both true that Taylor grew up in a health-conscious childhood home and she has a good relationship with her parents, or it is true that Taylor neither grew up in a health-conscious childhood home nor has a good relationship with her parents.",
        "premises-FOL": "∀x (Salad(x) → HealthyHabits(x))\n∀x (HealthyChildhood(x) → Salad(x))\n∀x (Nutritional(x) → HealthyChildhood(x))\n∀x (GoodRelationship(x) → ¬HealthyHabits(x))\n∀x (Gym(x) → Nutritional(x))\n(HealthyChildhood(taylor) ∧ GoodRelationship(taylor)) ∨ ¬HealthyChildhood(taylor) ∧ ¬GoodRelationship(marcy)",
        "question": "Is the following statement true or false? Taylor visits the gym at least once a day.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "Gym(taylor)",
        "answer": "B",
        "id": "FOLIO_169"
    },
    {
        "context": "All people who eat salads regularly are very conscious about their health and eating habits.\nAll people who grew up in health-conscious childhood homes eat salads regularly.\nAll people who fulfill their nutritional daily intakes grew up in health-conscious childhood homes.\nIf people have good relationships with their parents, then they fulfill their nutritional daily intakes.\nIf people have good relationships with their parents, then they do not eat salads regularly.\nIf people visit the gym at least once a day, then they always fulfill their daily nutritional intakes.\nIt is either both true that Taylor grew up in a health-conscious childhood home and she has a good relationship with her parents, or it is true that Taylor neither grew up in a health-conscious childhood home nor has a good relationship with her parents.",
        "premises-FOL": "∀x (Salad(x) → HealthyHabits(x))\n∀x (HealthyChildhood(x) → Salad(x))\n∀x (Nutritional(x) → HealthyChildhood(x))\n∀x (GoodRelationship(x) → ¬HealthyHabits(x))\n∀x (Gym(x) → Nutritional(x))\n(HealthyChildhood(taylor) ∧ GoodRelationship(taylor)) ∨ ¬HealthyChildhood(taylor) ∧ ¬GoodRelationship(marcy)",
        "question": "Is the following statement true or false? Taylor neither grew up in a health-conscious childhood home nor does she visit the gym at least once a day.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "¬(HealthyChildhood(taylor) ∨ Gym(taylor))",
        "answer": "A",
        "id": "FOLIO_170"
    },
    {
        "context": "[BG] The Olympic games is a sporting event. \nThe last Olympic games was in Tokyo.\nThe United States won the most medals in Tokyo. ",
        "premises-FOL": "SportingEvent(olympics)\nLastOlympics(tokyo)\nMostMedals(unitedStates, tokyo)",
        "question": "Is the following statement true or false? The last Olympic games were not in Tokyo.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "¬LastOlympics(tokyo)",
        "answer": "B",
        "id": "FOLIO_172"
    },
    {
        "context": "[BG] The Olympic games is a sporting event. \nThe last Olympic games was in Tokyo.\nThe United States won the most medals in Tokyo. ",
        "premises-FOL": "SportingEvent(olympics)\nLastOlympics(tokyo)\nMostMedals(unitedStates, tokyo)",
        "question": "Is the following statement true or false? The United States won the most medals in the last Olympic games.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "∃x (LastOlympics(x) ∧ MostMedals(unitedStates, x))",
        "answer": "A",
        "id": "FOLIO_173"
    },
    {
        "context": "All horses have hooves.\nNo humans have hooves.",
        "premises-FOL": "∀x (Horse(x) → Hooves(x))\n∀x (Human(x) → ¬Hooves(x))",
        "question": "Is the following statement true or false? Some humans are horses.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "∃x (Human(x) ∧ Horse(x))",
        "answer": "B",
        "id": "FOLIO_174"
    },
    {
        "context": "Susan flies to LGA airport.\nThe departure and arrival can not be the same airport.\nJohn flies from LGA airport.",
        "premises-FOL": "FlyTo(susan, lga)\n∀x ∀y (FlyFrom(x, y) ⊕ FlyTo(x, y))\nFlyFrom(john, lga)",
        "question": "Is the following statement true or false? Susan flies from LGA airport.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "FlyFrom(susan, lga)",
        "answer": "B",
        "id": "FOLIO_175"
    },
    {
        "context": "Susan flies to LGA airport.\nThe departure and arrival can not be the same airport.\nJohn flies from LGA airport.",
        "premises-FOL": "FlyTo(susan, lga)\n∀x ∀y (FlyFrom(x, y) ⊕ FlyTo(x, y))\nFlyFrom(john, lga)",
        "question": "Is the following statement true or false? John flies to LGA airport.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "FlyTo(john, lga)",
        "answer": "B",
        "id": "FOLIO_176"
    },
    {
        "context": "No one nice to animals is mean to animals.\nSome grumpy people are mean to animals.\nAll animal lovers are nice to animals.\nIf someone owns a pet, then they love animals.\nTom is a pet owner.",
        "premises-FOL": "∀x (Nice(x) → ¬Mean(x))\n∃x (Grumpy(x) ∧ Mean(x))\n∀x (AnimalLover(x) → Nice(x))\n∀x (PetOwner(x) → AnimalLover(x))\nPetOwner(tom)",
        "question": "Is the following statement true or false? Tom is not a grumpy person and mean to animals.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "¬(Grumpy(tom) ∧ Mean(tom))",
        "answer": "A",
        "id": "FOLIO_178"
    },
    {
        "context": "No one nice to animals is mean to animals.\nSome grumpy people are mean to animals.\nAll animal lovers are nice to animals.\nIf someone owns a pet, then they love animals.\nTom is a pet owner.",
        "premises-FOL": "∀x (Nice(x) → ¬Mean(x))\n∃x (Grumpy(x) ∧ Mean(x))\n∀x (AnimalLover(x) → Nice(x))\n∀x (PetOwner(x) → AnimalLover(x))\nPetOwner(tom)",
        "question": "Is the following statement true or false? If Tom is not a grumpy person and mean to animals, then Tom is neither a grumpy person nor an Animal Lover.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "¬(Grumpy(tom) ∧ Mean(tom)) → ¬(Grumpy(tom) ∨ AnimalLover(tom))",
        "answer": "B",
        "id": "FOLIO_179"
    },
    {
        "context": "A podcast is not a novel.\n[BG] If a person is born in American City, the person is American.\n[BG] If a book is novel and it is written by a person, then the person is a novel writer.\nDani Shapiro is an American writer.\nFamily History is written by Dani Shapiro.\nFamily History is a novel written in 2003.\nDani Shapiro created a podcast called Family Secrets.\n[BG] Boston is an American city.",
        "premises-FOL": "∀x (IsPodcast(x) → ¬IsNovel(x))\n∀x ∃y (BornIn(x, y) ∧ IsCity(y) ∧ IsAmerican(y) → IsAmerican(x))\n∀x ∀y (IsNovel(x) ∧ WrittenBy(x, y) → WritesNovel(y))\nIsAmerican(dani_Shapiro) ∧ IsWriter(dani_Shapiro)\nWrittenBy(family_History, dani_Shapiro)\nIsNovel(family_History) ∧ WrittenIn(family_History, y2003)\nIsPodcast(family_Secrets) ∧ CreatedBy(family_Secrets, dani_Shapiro)\nIsCity(boston) ∧ IsAmerican(boston)",
        "question": "Is the following statement true or false? Dani Shapiro is a novel writer.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "WritesNovel(dani_Shapiro)",
        "answer": "A",
        "id": "FOLIO_180"
    },
    {
        "context": "A podcast is not a novel.\n[BG] If a person is born in American City, the person is American.\n[BG] If a book is novel and it is written by a person, then the person is a novel writer.\nDani Shapiro is an American writer.\nFamily History is written by Dani Shapiro.\nFamily History is a novel written in 2003.\nDani Shapiro created a podcast called Family Secrets.\n[BG] Boston is an American city.",
        "premises-FOL": "∀x (IsPodcast(x) → ¬IsNovel(x))\n∀x ∃y (BornIn(x, y) ∧ IsCity(y) ∧ IsAmerican(y) → IsAmerican(x))\n∀x ∀y (IsNovel(x) ∧ WrittenBy(x, y) → WritesNovel(y))\nIsAmerican(dani_Shapiro) ∧ IsWriter(dani_Shapiro)\nWrittenBy(family_History, dani_Shapiro)\nIsNovel(family_History) ∧ WrittenIn(family_History, y2003)\nIsPodcast(family_Secrets) ∧ CreatedBy(family_Secrets, dani_Shapiro)\nIsCity(boston) ∧ IsAmerican(boston)",
        "question": "Is the following statement true or false? Family Secrets is a novel.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "IsNovel(family_Secrets)",
        "answer": "B",
        "id": "FOLIO_181"
    },
    {
        "context": "Some basketball players are not American.\nAll basketball players are tall.\nIf someone is tall, they wear large shoes.\nIf someone wears large shoes, they wear large-sized clothes.\nYuri does not wear large-size clothes.",
        "premises-FOL": "∃x (BasketballPlayer(x) ∧ ¬American(x))\n∀x (BasketballPlayer(x) → Tall(x))\n∀x (Tall(x) → WearLargeShoes(x))\n∀x (WearLargeShoes(x) → WearLargeClothes(x))\n¬WearLargeClothes(yuri)",
        "question": "Is the following statement true or false? Yuri is not an American basketball player.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "¬(American(yuri) ∧ BasketballPlayer(yuri))",
        "answer": "A",
        "id": "FOLIO_184"
    },
    {
        "context": "Some basketball players are not American.\nAll basketball players are tall.\nIf someone is tall, they wear large shoes.\nIf someone wears large shoes, they wear large-sized clothes.\nYuri does not wear large-size clothes.",
        "premises-FOL": "∃x (BasketballPlayer(x) ∧ ¬American(x))\n∀x (BasketballPlayer(x) → Tall(x))\n∀x (Tall(x) → WearLargeShoes(x))\n∀x (WearLargeShoes(x) → WearLargeClothes(x))\n¬WearLargeClothes(yuri)",
        "question": "Is the following statement true or false? Yuri is an American basketball player.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "American(yuri) ∧ BasketballPlayer(yuri)",
        "answer": "B",
        "id": "FOLIO_185"
    },
    {
        "context": "Some basketball players are not American.\nAll basketball players are tall.\nIf someone is tall, they wear large shoes.\nIf someone wears large shoes, they wear large-sized clothes.\nYuri does not wear large-size clothes.",
        "premises-FOL": "∃x (BasketballPlayer(x) ∧ ¬American(x))\n∀x (BasketballPlayer(x) → Tall(x))\n∀x (Tall(x) → WearLargeShoes(x))\n∀x (WearLargeShoes(x) → WearLargeClothes(x))\n¬WearLargeClothes(yuri)",
        "question": "Is the following statement true or false? If Yuri does not wear large shoes, then Yuri is an American basketball player.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "¬WearLargeShoes(yuri) → (American(yuri) ∧ BasketballPlayer(yuri))",
        "answer": "B",
        "id": "FOLIO_186"
    },
    {
        "context": "Some basketball players are not American.\nAll basketball players are tall.\nIf someone is tall, they wear large shoes.\nIf someone wears large shoes, they wear large-sized clothes.\nYuri does not wear large-size clothes.",
        "premises-FOL": "∃x (BasketballPlayer(x) ∧ ¬American(x))\n∀x (BasketballPlayer(x) → Tall(x))\n∀x (Tall(x) → WearLargeShoes(x))\n∀x (WearLargeShoes(x) → WearLargeClothes(x))\n¬WearLargeClothes(yuri)",
        "question": "Is the following statement true or false? If Yuri is not an American basketball player, then Yuri is a basketball player.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "¬(American(yuri) ∧ BasketballPlayer(yuri)) → BasketballPlayer(yuri)",
        "answer": "B",
        "id": "FOLIO_187"
    },
    {
        "context": "Events are either happy or sad.\nAt least one event is happy. ",
        "premises-FOL": "∀x (Event(x) → Happy(x) ⊕ Sad(x))\n∃x (Event(x) ∧ Happy(x)) ",
        "question": "Is the following statement true or false? All events are sad.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "∀x (Event(x) → Sad(x))",
        "answer": "B",
        "id": "FOLIO_188"
    },
    {
        "context": "The winner of the 1992 du Maurier Classic was Steinhauer.\nSteinhauer participated in the 1992 du Maurier Classic.\nThere was one six-way tie on the leaderboard and one person in the six-way tie was from Belgium.\nDescampe is from Belgium and is on the leaderboard of the 1992 du Maurier Classic.\nAll people on the leaderboard of the 1992 du Maurier Classic participated in the 1992 du Maurier Classic.",
        "premises-FOL": "Winner(maurier, steinhauer)\nParticipate(maurier, steinhauer)\n∃x (LeaderBoard(maurier, x) ∧ SixWayTie(x) ∧ Belgium(x))\nBelgium(descampe) ∧ LeaderBoard(maurier, descampe)\n∀x (LeaderBoard(maurier, x) → Participate(maurier, x))",
        "question": "Is the following statement true or false? Steinhauer was not the winner of the 1992 du Maurier Classic.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "¬Winner(maurier, steinhauer)",
        "answer": "B",
        "id": "FOLIO_189"
    },
    {
        "context": "If an animal barks, then Jane does not like it.\nAll dogs are animals that bark.\nIf an animal jumps, then Jane likes it.\nIf an animal has legs, then it jumps.\nIf an animal is terricolous, then it has legs. \nIf KiKi neither jumps nor has legs, then KiKi is terricolous or has legs.",
        "premises-FOL": "∀x (Bark(x) → ¬Like(jane, x))\n∀x (Dog(x) → Bark(x))\n∀x (Jump(x) → Like(jane, x))\n∀x (HaveLegs(x) → Jump(x))\n∀x (Terricolous(x) → HaveLegs(x))\n(¬Jump(kiki) ∧ ¬HaveLegs(kiki)) → (Terricolous(kiki) ∨ HaveLegs(kiki))",
        "question": "Is the following statement true or false? KiKi barks and is a dog.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "Bark(kiki) ∧ Dog(kiki)",
        "answer": "B",
        "id": "FOLIO_192"
    },
    {
        "context": "If an animal barks, then Jane does not like it.\nAll dogs are animals that bark.\nIf an animal jumps, then Jane likes it.\nIf an animal has legs, then it jumps.\nIf an animal is terricolous, then it has legs. \nIf KiKi neither jumps nor has legs, then KiKi is terricolous or has legs.",
        "premises-FOL": "∀x (Bark(x) → ¬Like(jane, x))\n∀x (Dog(x) → Bark(x))\n∀x (Jump(x) → Like(jane, x))\n∀x (HaveLegs(x) → Jump(x))\n∀x (Terricolous(x) → HaveLegs(x))\n(¬Jump(kiki) ∧ ¬HaveLegs(kiki)) → (Terricolous(kiki) ∨ HaveLegs(kiki))",
        "question": "Is the following statement true or false? KiKi neither barks nor is a dog.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "¬Bark(kiki) ∧ ¬Dog(kiki)",
        "answer": "A",
        "id": "FOLIO_193"
    },
    {
        "context": "Ailton Silva, born in 1995, is commonly known as Ailton.\nAilton is a football player who was loaned out to Braga.\nAilton Silva is a Brazillian footballer who plays for Nautico.\nNautico is a football club along with Braga.\nFluminense is a football club.",
        "premises-FOL": "BornIn(ailtonsilva, y1995) ∧ CommonlyKnownAs(ailtonsilva, ailton)\nFootballPlayer(ailton) ∧ LoanedTo(ailton, braga)\nBrazilian(ailtonsilva) ∧ Footballplayer(ailtonsilva) ∧ PlaysFor(ailtonsilva, nautico)\nFootballClub(nautico) ∧ FootballClub(braga)\nFootballClub(fluminense)",
        "question": "Is the following statement true or false? No one playing for Nautico is Brazilian.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "∀x (PlaysFor(x, nautico) → ¬Brazilian(x))",
        "answer": "B",
        "id": "FOLIO_194"
    },
    {
        "context": "Ailton Silva, born in 1995, is commonly known as Ailton.\nAilton is a football player who was loaned out to Braga.\nAilton Silva is a Brazillian footballer who plays for Nautico.\nNautico is a football club along with Braga.\nFluminense is a football club.",
        "premises-FOL": "BornIn(ailtonsilva, y1995) ∧ CommonlyKnownAs(ailtonsilva, ailton)\nFootballPlayer(ailton) ∧ LoanedTo(ailton, braga)\nBrazilian(ailtonsilva) ∧ Footballplayer(ailtonsilva) ∧ PlaysFor(ailtonsilva, nautico)\nFootballClub(nautico) ∧ FootballClub(braga)\nFootballClub(fluminense)",
        "question": "Is the following statement true or false? Ailton Silva foes not play for a football club.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "∀x (FootballClub(x) → ¬PlaysFor(ailtonsilva, x))",
        "answer": "B",
        "id": "FOLIO_195"
    },
    {
        "context": "Ailton Silva, born in 1995, is commonly known as Ailton.\nAilton is a football player who was loaned out to Braga.\nAilton Silva is a Brazillian footballer who plays for Nautico.\nNautico is a football club along with Braga.\nFluminense is a football club.",
        "premises-FOL": "BornIn(ailtonsilva, y1995) ∧ CommonlyKnownAs(ailtonsilva, ailton)\nFootballPlayer(ailton) ∧ LoanedTo(ailton, braga)\nBrazilian(ailtonsilva) ∧ Footballplayer(ailtonsilva) ∧ PlaysFor(ailtonsilva, nautico)\nFootballClub(nautico) ∧ FootballClub(braga)\nFootballClub(fluminense)",
        "question": "Is the following statement true or false? Ailton was not loaned out to a football club.",
        "options": [
            "A) True",
            "B) False",
            "C) Uncertain"
        ],
        "conclusion-FOL": "∀x (FootballClub(x) → ¬LoanedTo(ailton, x))",
        "answer": "B",
        "id": "FOLIO_196"
    }
]